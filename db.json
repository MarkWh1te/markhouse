{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.png","path":"favicon.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1496187114000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1496187114000},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1496187114000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1496187114000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1496187114000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1496187114000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1496187114000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1496187114000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1496187114000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1496187114000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1496187114000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1496187114000},{"_id":"themes/next/bower.json","hash":"be0a430362cb73a7e3cf9ecf51a67edf8214b637","modified":1496187114000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1496187114000},{"_id":"themes/next/_config.yml","hash":"f9e6e44f43320cafc0994746fc2887386200720c","modified":1496893155804},{"_id":"themes/next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1496187114000},{"_id":"source/_posts/Spark_conslu.md","hash":"e4824d88c85d36bb2aeb3f9c76b0f246540ee47d","modified":1496452089000},{"_id":"source/_posts/emacs_org.md","hash":"ff5ab019a9668a1fe7ceb1b8834444ab704587b0","modified":1496242528000},{"_id":"source/_posts/ionic_build.md","hash":"32bd64490752ed2e89e3a6bfdc604cc058856130","modified":1496233983000},{"_id":"source/tags/index.md","hash":"862017d0c8065776a6ce67e8bf05615c639664b8","modified":1496405084000},{"_id":"source/_posts/kill_questions.md","hash":"d7b9d9f65470acbb249e1c15105a3bef1b68fc57","modified":1496416438000},{"_id":"source/_posts/jenkins_ci.md","hash":"cd820946a4cf2645ff811f166646c37eb6701c9c","modified":1496234365000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1496187114000},{"_id":"source/_posts/wxbot.md","hash":"87b87c037e98843964655e7985a72598c1d771b2","modified":1496417661000},{"_id":"source/about/index.md","hash":"f36f5cbaccf94bb84a96edf995cdbfc31c6c5fbd","modified":1496791174000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1496187114000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1496187114000},{"_id":"themes/next/.git/index","hash":"eaab326601305d8f69047a36d0f029a2bd6dd430","modified":1496230963000},{"_id":"themes/next/.git/packed-refs","hash":"5b997b1e07005896f9418ebc524143b6a66718fb","modified":1496187114000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1496187114000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"fdd63b77472612337309eb93ec415a059b90756b","modified":1496187114000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1496187114000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1496187114000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1496187114000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1496187114000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1496187114000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1496187114000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1496187114000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1496187114000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1496187114000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1496187114000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1496187114000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1496187114000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1496187114000},{"_id":"themes/next/layout/_layout.swig","hash":"98910163f4bb2856692fdbb55d6e82233fb0c24e","modified":1496802257003},{"_id":"themes/next/layout/archive.swig","hash":"5de4dca06b05d99e4f6bad617a4b8f4f3592fb01","modified":1496187114000},{"_id":"themes/next/layout/category.swig","hash":"82e7bc278559b4335ad974659104eaaf04863032","modified":1496187114000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1496187114000},{"_id":"themes/next/layout/page.swig","hash":"baa667bc801349d5c4984c0f172973d3780400df","modified":1496802257003},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1496187114000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1496187114000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1496187114000},{"_id":"themes/next/layout/schedule.swig","hash":"f93c53f6fd5c712584f6efba6f770c30fa8a3e80","modified":1496187114000},{"_id":"themes/next/layout/tag.swig","hash":"2e73ee478e981092ea9a5d10dd472a9461db395b","modified":1496187114000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1496187114000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1496187114000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1496187114000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1496187114000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1496187114000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1496187114000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1496187114000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1496187114000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1496187114000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1496187114000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1496187114000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1496187114000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1496187114000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1496187114000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1496187114000},{"_id":"themes/next/.git/logs/HEAD","hash":"7cc04d0c95dad634c4978b93f06ef269b6b02781","modified":1496187114000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1496187114000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1496187114000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1496187114000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1496187114000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1496187114000},{"_id":"themes/next/layout/_macro/post.swig","hash":"9481f43ed356e00df7b519e92ad0becebc9e1505","modified":1496802257003},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a2b213c1a7c37cd6e4749f2018371f4c1f4f0d23","modified":1496802257003},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1496187114000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"1c7d3c975e499b9aa3119d6724b030b7b00fc87e","modified":1496187114000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1496187114000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6a7eb93d8aa7d4baa472890bd666b921f449d8af","modified":1496802257003},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1496187114000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1496187114000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1496187114000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1496187114000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1496187114000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1496187114000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1496187114000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1496187114000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1496187114000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1496896622112},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1496187114000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1496187114000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1496187114000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1496187114000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1496187114000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1496187114000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1496187114000},{"_id":"themes/next/scripts/tags/note.js","hash":"21b102db8a01c7b15ae2c0ea3ef3d4cf807ec6ed","modified":1496802257007},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1496187114000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1496187114000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1496187114000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1496187114000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1496187114000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1496187114000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1496187114000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1496187114000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1496187114000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1496187114000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1496187114000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1496187114000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1496187114000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1496187114000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1496187114000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1496187114000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1496187114000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1496187114000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1496187114000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1496187114000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1496187114000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1496187114000},{"_id":"themes/next/.git/refs/heads/master","hash":"f6fbd6961a37e7fcf4a1afacee916a1080c7cadc","modified":1496187114000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1496187114000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1496187114000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1496187114000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1496187114000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1496187114000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1496187114000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1496187114000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1496187114000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"b255ae4fa8861f083f99d5f62e8a358bbf1d9e9b","modified":1496803021317},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1496187114000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1496187114000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1496187114000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1496187114000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1496187114000},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1496187114000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1496187114000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1496187114000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1496187114000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"1d0d01aaeb7bcde3671263d736718f8837c20182","modified":1496187114000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1496187114000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1496187114000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"1f349aa30dd1f7022f7d07a1f085eea5ace3f26d","modified":1496187114000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1496187114000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1496187114000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1496187114000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1496187114000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1496187114000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1496187114000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1496187114000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d6a793bcada68d4b6c58392546bc48a482e4a7d3","modified":1496187114000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1496187114000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1496187114000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1496187114000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1496187114000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1496187114000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1496187114000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1496187114000},{"_id":"themes/next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1496187114000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1496187114000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1496187114000},{"_id":"themes/next/source/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1496802257051},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1496187114000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1496187114000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1496187114000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1496187114000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1496187114000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1496187114000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1496187114000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1496187114000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1496187114000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1496187114000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1496187114000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1496187114000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1496187114000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1496187114000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1496187114000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1496187114000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1496187114000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1496187114000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1496187114000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1496187114000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1496187114000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1496187114000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1496187114000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"7cc04d0c95dad634c4978b93f06ef269b6b02781","modified":1496187114000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1496187114000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1496187114000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1496187114000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1496187114000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1496187114000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1496187114000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1496187114000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1496187114000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1496187114000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1496187114000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1496187114000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1496187114000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1496187114000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1496187114000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1496187114000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1496187114000},{"_id":"themes/next/.git/objects/pack/pack-7ff8a00988c15f9fa5ea2cae3ce97ea9172dd2c3.idx","hash":"e7b4e36b75d37342b6726fdca781c7f00c7bd8e5","modified":1496187114000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1496187114000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1496187114000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1496187114000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"7cc04d0c95dad634c4978b93f06ef269b6b02781","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1496802257007},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1496802257007},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"468bc734f47209096588ef1a8e55e60a3b12aa63","modified":1496802257007},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1496802257007},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"dfc86d37f5b580977d82af6ef835082d09a0c499","modified":1496802257007},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"bb3be8374c31c372ed0995bd8030d2b920d581de","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1496187114000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1496187114000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1496187114000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1496187114000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1496187114000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1496187114000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1496187114000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1496187114000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1496187114000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1496187114000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1496187114000},{"_id":"themes/next/.git/objects/pack/pack-7ff8a00988c15f9fa5ea2cae3ce97ea9172dd2c3.pack","hash":"e536db8c7ba063f1254019afb3ee8be020226eb1","modified":1496187114000},{"_id":"public/tags/index.html","hash":"8c666b66a62e358b910f60dd69cdf5b13fd285e7","modified":1496813037795},{"_id":"public/about/index.html","hash":"b261b4196f33bf656382a50e39c2e02e5a91b29a","modified":1496813037795},{"_id":"public/2015/12/03/jenkins_ci/index.html","hash":"f23ace83cd7b8b1a2f4cd851dce465da3086c08a","modified":1496888848248},{"_id":"public/archives/index.html","hash":"e6bee085307cce5a88b47920e732dc1f54bd1f27","modified":1496887725907},{"_id":"public/archives/2014/index.html","hash":"34bedea241b81fda6c3c08b7790f97b3ca0fcacb","modified":1496416121137},{"_id":"public/archives/2014/08/index.html","hash":"dd9dacba4dbe4988bb95ba02bf2df68e04070ede","modified":1496416121137},{"_id":"public/archives/2015/index.html","hash":"c97ecd117d31c072f846b5da4cfd3363dd7efa8e","modified":1496887725907},{"_id":"public/archives/2015/12/index.html","hash":"41e1300987837b55764f4033cc7614d42821de49","modified":1496887725908},{"_id":"public/archives/2016/index.html","hash":"5ea596ffba9024912e1c7bf8894b33d272c94ec3","modified":1496887725908},{"_id":"public/archives/2016/05/index.html","hash":"6815ad1bbacfb9f471adf07cbd47bbced07b2f3f","modified":1496887725908},{"_id":"public/archives/2016/08/index.html","hash":"7fb9ba433b892958b1fa9f6187097633072fc43b","modified":1496887725908},{"_id":"public/archives/2017/03/index.html","hash":"23d10eaa7614429987f27b37f9245a5bab78cf26","modified":1496887725908},{"_id":"public/archives/2017/index.html","hash":"d353728ba02a7de7b95d4f1bb5a88e466af1d5fa","modified":1496887725908},{"_id":"public/archives/2017/04/index.html","hash":"df8b26ad7ecd4efe0969ba3072328eb301cb6013","modified":1496887725908},{"_id":"public/categories/bigdata/index.html","hash":"fc4ee9c7309d6ff39ca151e1cc196a430d6a16bc","modified":1496887725908},{"_id":"public/categories/tools/index.html","hash":"205688fe7e8359059bb89ef9b7fdb7344f236daa","modified":1496887725908},{"_id":"public/categories/Algorithms/index.html","hash":"32f68244cebba4f89305685fde2cbc783bffaced","modified":1496887725908},{"_id":"public/categories/server/index.html","hash":"86a834f0ddb0838a1a9a7b258ac55759be05f2dc","modified":1496887725908},{"_id":"public/categories/serve/index.html","hash":"1a7ec82a70d925b022cd351f64e58adc938a49e2","modified":1496417199054},{"_id":"public/tags/Spark/index.html","hash":"3ad3ba2930e1c6b1294cda56d8e0f6dbe787741a","modified":1496887725908},{"_id":"public/tags/Scala/index.html","hash":"6ff0bfebc447d3e8e9c829bab201ed7ca9807e9b","modified":1496887725909},{"_id":"public/tags/editor/index.html","hash":"ae91ab2500d3555a9ebfb09b3b31f542db2be731","modified":1496887725909},{"_id":"public/tags/time-killer/index.html","hash":"c3e24fc45090f2be0c065be90b895e56fafb88b2","modified":1496887725909},{"_id":"public/tags/android/index.html","hash":"22288c13f5225417da822b53f13167d1c54f7a3a","modified":1496887725909},{"_id":"public/tags/inoic/index.html","hash":"fd32a0e15e5cf47cd107f2de04634e35d9642544","modified":1496887725909},{"_id":"public/tags/math/index.html","hash":"2ed49f5f660266e103c5eb4e2faa8dd518ea81d6","modified":1496887725909},{"_id":"public/tags/CI/index.html","hash":"31f9fbc74bc6aa044d0bbd834a2089f54551bb1e","modified":1496887725909},{"_id":"public/tags/jenkins/index.html","hash":"9a03db6fe7f0caff7c2a9a9edeb5f2ad8d997ee1","modified":1496887725909},{"_id":"public/tags/wechat/index.html","hash":"5df60e7cbccfe61ac681850386bc6d6d49d1bfd4","modified":1496887725909},{"_id":"public/2017/04/30/emacs_org/index.html","hash":"e00e67ac9850b29a7fdc53ed26fcba020a2b48eb","modified":1496885061512},{"_id":"public/2017/03/30/Spark_conslu/index.html","hash":"64d3276226f394707d68e7389648d36c83549200","modified":1496885061512},{"_id":"public/2016/08/04/wxbot/index.html","hash":"02242287b52e11e191f9a55edf4cf64dd002d3ed","modified":1496416510011},{"_id":"public/2016/05/31/ionic_build/index.html","hash":"d0b266b218b524eaf99518721cf409add3dee31c","modified":1496879399047},{"_id":"public/2014/08/03/kill_questions/index.html","hash":"c54f8b774ec7fd259141bfa23ee5abe5a7e579c0","modified":1496416121140},{"_id":"public/index.html","hash":"add61ebd7edfa483b77a006ff83ce4adb52ae07b","modified":1496891959292},{"_id":"public/2016/08/03/kill_questions/index.html","hash":"e1f285e3ffea4e0e83814b621c347304f8ff81ab","modified":1496885061512},{"_id":"public/archives/2016/01/index.html","hash":"8de8e9b55ad7c4b3b84c2f912386a7ad2e25d6c1","modified":1496887725908},{"_id":"public/2016/01/04/wxbot/index.html","hash":"cb0891fbc770a5f4f975767be96ef747c58ec1a0","modified":1496879399047},{"_id":"public/tags/machine-learning/index.html","hash":"35ed3b0ff24c262fc6b276fe06d9b2a71ad42dd5","modified":1496887725909},{"_id":"source/_posts/perceptron.md","hash":"923a980c2be35c0f82d1277cce3f36bc3d8fcc9d","modified":1496802050038},{"_id":"public/archives/2017/06/index.html","hash":"7a744e8321d319c8cb32c3ab6ffa3aef79468c92","modified":1496887725908},{"_id":"public/tags/deep-learning/index.html","hash":"621e9e0c1c2124d3eec34303f979120818f19b54","modified":1496887725909},{"_id":"public/tags/data-mining/index.html","hash":"99b6d12c755f49ae2eb83ab26cdea135c2184c15","modified":1496887725910},{"_id":"public/2017/06/06/perceptron/index.html","hash":"190133ffade9fb8352a4bfd4b5d76c2e799a50ba","modified":1496813037802},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1496802257003},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1496802257007},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1496802257063},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1496802257063},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1496802257007},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1496802257007},{"_id":"public/2016/05/30/ionic_build/index.html","hash":"ebfb263eaf95004432ee64fbdf4856a411402921","modified":1496888310304},{"_id":"public/2016/01/03/wxbot/index.html","hash":"d8ab61719e8cd7353df775296ab16af8137f65a2","modified":1496887357842},{"_id":"public/categories/algorithms/index.html","hash":"67f011cf0dc88d58318dd2f400577ec3cf8abb30","modified":1496887725908},{"_id":"public/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1496802496134},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1496802496134},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1496802496134},{"_id":"source/favicon.png","hash":"e21f4524a893ae39080f642983319bf3266c99ee","modified":1462716585000},{"_id":"public/favicon.png","hash":"e21f4524a893ae39080f642983319bf3266c99ee","modified":1496804589855},{"_id":"source/_posts/perceptron_network.md","hash":"b0dddba7c60e91136044af51d000e6cd0d66f638","modified":1496896622104},{"_id":"public/2017/06/07/perceptron_network/index.html","hash":"900341f8c6d49a6824afff2b1ae8542bdc93ae34","modified":1496891959292},{"_id":"public/2017/06/08/perceptron_network/index.html","hash":"a31d13ad57cf33cd9aa45c0b736b86ea5925207e","modified":1496879970982},{"_id":"themes/next/layout/_third-party/mathjax.swig.bac","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1496893564211}],"Category":[{"name":"bigdata","_id":"cj3fwt6vj0002b7sgq7ozgy7u"},{"name":"tools","_id":"cj3fwt6vr0005b7sgres15kaw"},{"name":"Algorithms","_id":"cj3fwt71t000pb7sglknjkaz9"},{"name":"server","_id":"cj3fwt71x000sb7sgzqqp5ohk"},{"name":"serve","_id":"cj3fwt720000xb7sgtkn5fgkk"},{"name":"algorithms","_id":"cj3m7f50y0000iosg9jwyvx40"}],"Data":[],"Page":[{"title":"about","date":"2017-05-31T20:08:59.000Z","_content":"\n## About this  blog\nThis is mainly a technical blog. However, I’ll also write some interesting things in lifetime.\n## About me\nI'm a software engineer. My primary programming languages are Python and Scala, But I love Lisp(scheme) haskell and C++ too.\n\nIn spare time, I like reading book, watching movie and running.\n\nIf you have any suggestions about this blog ,please contact me, you can find on [twitter](https://twitter.com/)   and [zhihu](https://www.zhihu.com/people/wh1te/activities) or just mail to iamwh1temark@gmail.com.\n\n\n\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-05-31 20:08:59\n---\n\n## About this  blog\nThis is mainly a technical blog. However, I’ll also write some interesting things in lifetime.\n## About me\nI'm a software engineer. My primary programming languages are Python and Scala, But I love Lisp(scheme) haskell and C++ too.\n\nIn spare time, I like reading book, watching movie and running.\n\nIf you have any suggestions about this blog ,please contact me, you can find on [twitter](https://twitter.com/)   and [zhihu](https://www.zhihu.com/people/wh1te/activities) or just mail to iamwh1temark@gmail.com.\n\n\n\n\n","updated":"2017-06-08T04:37:02.104Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj3nxnja90000rbjxkx1ken4c","content":"<h2 id=\"About-this-blog\"><a href=\"#About-this-blog\" class=\"headerlink\" title=\"About this  blog\"></a>About this  blog</h2><p>This is mainly a technical blog. However, I’ll also write some interesting things in lifetime.</p>\n<h2 id=\"About-me\"><a href=\"#About-me\" class=\"headerlink\" title=\"About me\"></a>About me</h2><p>I’m a software engineer. My primary programming languages are Python and Scala, But I love Lisp(scheme) haskell and C++ too.</p>\n<p>In spare time, I like reading book, watching movie and running.</p>\n<p>If you have any suggestions about this blog ,please contact me, you can find on <a href=\"https://twitter.com/\" target=\"_blank\" rel=\"external\">twitter</a>   and <a href=\"https://www.zhihu.com/people/wh1te/activities\" target=\"_blank\" rel=\"external\">zhihu</a> or just mail to iamwh1temark@gmail.com.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"About-this-blog\"><a href=\"#About-this-blog\" class=\"headerlink\" title=\"About this  blog\"></a>About this  blog</h2><p>This is mainly a technical blog. However, I’ll also write some interesting things in lifetime.</p>\n<h2 id=\"About-me\"><a href=\"#About-me\" class=\"headerlink\" title=\"About me\"></a>About me</h2><p>I’m a software engineer. My primary programming languages are Python and Scala, But I love Lisp(scheme) haskell and C++ too.</p>\n<p>In spare time, I like reading book, watching movie and running.</p>\n<p>If you have any suggestions about this blog ,please contact me, you can find on <a href=\"https://twitter.com/\" target=\"_blank\" rel=\"external\">twitter</a>   and <a href=\"https://www.zhihu.com/people/wh1te/activities\" target=\"_blank\" rel=\"external\">zhihu</a> or just mail to iamwh1temark@gmail.com.</p>\n"},{"title":"tags","date":"2017-06-02T00:35:57.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-06-02 00:35:57\ntype: \"tags\"\n---\n","updated":"2017-06-08T04:37:02.104Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj3nxnjfk000trbjxosjejj8e","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Spark 总结(一) 基础","date":"2017-03-30T10:36:00.000Z","_content":"\n### RDDs\n\n#### 在Spark中RDDs是最基本的容器 , 它支持和scala collection 类似的API,比如map，fold，和filter.可以将它理解为这样的一个抽象类\n\n``` scala\nabstract class RDD[T]{\n     def map[U](f:T=>U):RDD[U] =\n     def flatMap[U]\n     def filter\n     def reduce\n     def fold\n     def aggregate\n   }\n```\n\n#### 创建一个RDD有两种办法：\n* 从HFDS或者本地文件系统中读取一个txtfile\n* 在已有的RDD上做Transformations\n      \n      \n      \n### Transformations and Actions\n\n1. Transformations\n    Transformations 是惰性的，它返回的是另一个RDD,比如filter，map，groupBy\n2. Actions \n    Actions 会立刻执行，会返回一个数值作为运算结果，比如，reduce，count\n3. 某些Transformations可以对两个RDD 进行集合运算:\n    * union\n    * intersection\n    * subtract\n    * cartesian\n4. 除此之外，还有一些的较为常用的actions\n    * takeSample\n    * takeOrdered\n    * saveAsTextFile\n    * saveAsSequenceFile\n        \n        \n### Spark的运算效率\n\n1.  spark 通过使用 immutable数据结构使其在做并行计算的过程中所有的计算都是in-memory的,不需要进行磁盘IO\n2.  通过使用persist()和cache（）等方法可以提高spark的效率,以逻辑回归算法为例, 在读取数据的使用persist ()，之后整个程序的运行效率会提高很多\n    \n``` scala\nval points = sc.textFile(...).map(parsePoint).persist()\nvar w = Vector.zeros(d)\nfor (i<-1 to numIterations){\n  val gradient = points.map{\n        p=> (1/(1+exp(-p.y*w.dot(p.x)))-1)*p.y*p.y \n  }.reduce(_+_)\n  w -= alpha*gradient\n}\n```\n\n\n### Spark程序执行过程:\n1. Driver Program(Spark Context)\n2. Cluster Manager(yearn,mesos)\n3. work node(executer)\n如果说对RDD 执行了一个foreach println的操作，其实你是看不到任何东西的， 因为foreach在work node 执行的，所以println这个函数的副作用是显示在work node上的。\n\n这也提醒了我们在spark的代码的时候要做在action之前都是referential transparency! \n        \n        \n        \n        \n        \n        \n        \n","source":"_posts/Spark_conslu.md","raw":"---\ntitle: Spark 总结(一) 基础\ndate: 2017-03-30 10:36:00\ntags:\n  - Spark\n  - Scala\ncategories: bigdata\n---\n\n### RDDs\n\n#### 在Spark中RDDs是最基本的容器 , 它支持和scala collection 类似的API,比如map，fold，和filter.可以将它理解为这样的一个抽象类\n\n``` scala\nabstract class RDD[T]{\n     def map[U](f:T=>U):RDD[U] =\n     def flatMap[U]\n     def filter\n     def reduce\n     def fold\n     def aggregate\n   }\n```\n\n#### 创建一个RDD有两种办法：\n* 从HFDS或者本地文件系统中读取一个txtfile\n* 在已有的RDD上做Transformations\n      \n      \n      \n### Transformations and Actions\n\n1. Transformations\n    Transformations 是惰性的，它返回的是另一个RDD,比如filter，map，groupBy\n2. Actions \n    Actions 会立刻执行，会返回一个数值作为运算结果，比如，reduce，count\n3. 某些Transformations可以对两个RDD 进行集合运算:\n    * union\n    * intersection\n    * subtract\n    * cartesian\n4. 除此之外，还有一些的较为常用的actions\n    * takeSample\n    * takeOrdered\n    * saveAsTextFile\n    * saveAsSequenceFile\n        \n        \n### Spark的运算效率\n\n1.  spark 通过使用 immutable数据结构使其在做并行计算的过程中所有的计算都是in-memory的,不需要进行磁盘IO\n2.  通过使用persist()和cache（）等方法可以提高spark的效率,以逻辑回归算法为例, 在读取数据的使用persist ()，之后整个程序的运行效率会提高很多\n    \n``` scala\nval points = sc.textFile(...).map(parsePoint).persist()\nvar w = Vector.zeros(d)\nfor (i<-1 to numIterations){\n  val gradient = points.map{\n        p=> (1/(1+exp(-p.y*w.dot(p.x)))-1)*p.y*p.y \n  }.reduce(_+_)\n  w -= alpha*gradient\n}\n```\n\n\n### Spark程序执行过程:\n1. Driver Program(Spark Context)\n2. Cluster Manager(yearn,mesos)\n3. work node(executer)\n如果说对RDD 执行了一个foreach println的操作，其实你是看不到任何东西的， 因为foreach在work node 执行的，所以println这个函数的副作用是显示在work node上的。\n\n这也提醒了我们在spark的代码的时候要做在action之前都是referential transparency! \n        \n        \n        \n        \n        \n        \n        \n","slug":"Spark_conslu","published":1,"updated":"2017-06-08T04:37:02.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3nxnjad0001rbjx39c4cl9s","content":"<h3 id=\"RDDs\"><a href=\"#RDDs\" class=\"headerlink\" title=\"RDDs\"></a>RDDs</h3><h4 id=\"在Spark中RDDs是最基本的容器-它支持和scala-collection-类似的API-比如map，fold，和filter-可以将它理解为这样的一个抽象类\"><a href=\"#在Spark中RDDs是最基本的容器-它支持和scala-collection-类似的API-比如map，fold，和filter-可以将它理解为这样的一个抽象类\" class=\"headerlink\" title=\"在Spark中RDDs是最基本的容器 , 它支持和scala collection 类似的API,比如map，fold，和filter.可以将它理解为这样的一个抽象类\"></a>在Spark中RDDs是最基本的容器 , 它支持和scala collection 类似的API,比如map，fold，和filter.可以将它理解为这样的一个抽象类</h4><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RDD</span>[<span class=\"type\">T</span>]</span>&#123;</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">map</span></span>[<span class=\"type\">U</span>](f:<span class=\"type\">T</span>=&gt;<span class=\"type\">U</span>):<span class=\"type\">RDD</span>[<span class=\"type\">U</span>] =</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">flatMap</span></span>[<span class=\"type\">U</span>]</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">filter</span></span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">reduce</span></span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fold</span></span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">aggregate</span></span></div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<h4 id=\"创建一个RDD有两种办法：\"><a href=\"#创建一个RDD有两种办法：\" class=\"headerlink\" title=\"创建一个RDD有两种办法：\"></a>创建一个RDD有两种办法：</h4><ul>\n<li>从HFDS或者本地文件系统中读取一个txtfile</li>\n<li>在已有的RDD上做Transformations</li>\n</ul>\n<h3 id=\"Transformations-and-Actions\"><a href=\"#Transformations-and-Actions\" class=\"headerlink\" title=\"Transformations and Actions\"></a>Transformations and Actions</h3><ol>\n<li>Transformations<br> Transformations 是惰性的，它返回的是另一个RDD,比如filter，map，groupBy</li>\n<li>Actions<br> Actions 会立刻执行，会返回一个数值作为运算结果，比如，reduce，count</li>\n<li>某些Transformations可以对两个RDD 进行集合运算:<ul>\n<li>union</li>\n<li>intersection</li>\n<li>subtract</li>\n<li>cartesian</li>\n</ul>\n</li>\n<li>除此之外，还有一些的较为常用的actions<ul>\n<li>takeSample</li>\n<li>takeOrdered</li>\n<li>saveAsTextFile</li>\n<li>saveAsSequenceFile</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Spark的运算效率\"><a href=\"#Spark的运算效率\" class=\"headerlink\" title=\"Spark的运算效率\"></a>Spark的运算效率</h3><ol>\n<li>spark 通过使用 immutable数据结构使其在做并行计算的过程中所有的计算都是in-memory的,不需要进行磁盘IO</li>\n<li>通过使用persist()和cache（）等方法可以提高spark的效率,以逻辑回归算法为例, 在读取数据的使用persist ()，之后整个程序的运行效率会提高很多</li>\n</ol>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">val</span> points = sc.textFile(...).map(parsePoint).persist()</div><div class=\"line\"><span class=\"keyword\">var</span> w = <span class=\"type\">Vector</span>.zeros(d)</div><div class=\"line\"><span class=\"keyword\">for</span> (i&lt;<span class=\"number\">-1</span> to numIterations)&#123;</div><div class=\"line\">  <span class=\"keyword\">val</span> gradient = points.map&#123;</div><div class=\"line\">        p=&gt; (<span class=\"number\">1</span>/(<span class=\"number\">1</span>+exp(-p.y*w.dot(p.x)))<span class=\"number\">-1</span>)*p.y*p.y </div><div class=\"line\">  &#125;.reduce(_+_)</div><div class=\"line\">  w -= alpha*gradient</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Spark程序执行过程\"><a href=\"#Spark程序执行过程\" class=\"headerlink\" title=\"Spark程序执行过程:\"></a>Spark程序执行过程:</h3><ol>\n<li>Driver Program(Spark Context)</li>\n<li>Cluster Manager(yearn,mesos)</li>\n<li>work node(executer)<br>如果说对RDD 执行了一个foreach println的操作，其实你是看不到任何东西的， 因为foreach在work node 执行的，所以println这个函数的副作用是显示在work node上的。</li>\n</ol>\n<p>这也提醒了我们在spark的代码的时候要做在action之前都是referential transparency! </p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"RDDs\"><a href=\"#RDDs\" class=\"headerlink\" title=\"RDDs\"></a>RDDs</h3><h4 id=\"在Spark中RDDs是最基本的容器-它支持和scala-collection-类似的API-比如map，fold，和filter-可以将它理解为这样的一个抽象类\"><a href=\"#在Spark中RDDs是最基本的容器-它支持和scala-collection-类似的API-比如map，fold，和filter-可以将它理解为这样的一个抽象类\" class=\"headerlink\" title=\"在Spark中RDDs是最基本的容器 , 它支持和scala collection 类似的API,比如map，fold，和filter.可以将它理解为这样的一个抽象类\"></a>在Spark中RDDs是最基本的容器 , 它支持和scala collection 类似的API,比如map，fold，和filter.可以将它理解为这样的一个抽象类</h4><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RDD</span>[<span class=\"type\">T</span>]</span>&#123;</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">map</span></span>[<span class=\"type\">U</span>](f:<span class=\"type\">T</span>=&gt;<span class=\"type\">U</span>):<span class=\"type\">RDD</span>[<span class=\"type\">U</span>] =</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">flatMap</span></span>[<span class=\"type\">U</span>]</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">filter</span></span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">reduce</span></span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fold</span></span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">aggregate</span></span></div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<h4 id=\"创建一个RDD有两种办法：\"><a href=\"#创建一个RDD有两种办法：\" class=\"headerlink\" title=\"创建一个RDD有两种办法：\"></a>创建一个RDD有两种办法：</h4><ul>\n<li>从HFDS或者本地文件系统中读取一个txtfile</li>\n<li>在已有的RDD上做Transformations</li>\n</ul>\n<h3 id=\"Transformations-and-Actions\"><a href=\"#Transformations-and-Actions\" class=\"headerlink\" title=\"Transformations and Actions\"></a>Transformations and Actions</h3><ol>\n<li>Transformations<br> Transformations 是惰性的，它返回的是另一个RDD,比如filter，map，groupBy</li>\n<li>Actions<br> Actions 会立刻执行，会返回一个数值作为运算结果，比如，reduce，count</li>\n<li>某些Transformations可以对两个RDD 进行集合运算:<ul>\n<li>union</li>\n<li>intersection</li>\n<li>subtract</li>\n<li>cartesian</li>\n</ul>\n</li>\n<li>除此之外，还有一些的较为常用的actions<ul>\n<li>takeSample</li>\n<li>takeOrdered</li>\n<li>saveAsTextFile</li>\n<li>saveAsSequenceFile</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Spark的运算效率\"><a href=\"#Spark的运算效率\" class=\"headerlink\" title=\"Spark的运算效率\"></a>Spark的运算效率</h3><ol>\n<li>spark 通过使用 immutable数据结构使其在做并行计算的过程中所有的计算都是in-memory的,不需要进行磁盘IO</li>\n<li>通过使用persist()和cache（）等方法可以提高spark的效率,以逻辑回归算法为例, 在读取数据的使用persist ()，之后整个程序的运行效率会提高很多</li>\n</ol>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">val</span> points = sc.textFile(...).map(parsePoint).persist()</div><div class=\"line\"><span class=\"keyword\">var</span> w = <span class=\"type\">Vector</span>.zeros(d)</div><div class=\"line\"><span class=\"keyword\">for</span> (i&lt;<span class=\"number\">-1</span> to numIterations)&#123;</div><div class=\"line\">  <span class=\"keyword\">val</span> gradient = points.map&#123;</div><div class=\"line\">        p=&gt; (<span class=\"number\">1</span>/(<span class=\"number\">1</span>+exp(-p.y*w.dot(p.x)))<span class=\"number\">-1</span>)*p.y*p.y </div><div class=\"line\">  &#125;.reduce(_+_)</div><div class=\"line\">  w -= alpha*gradient</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Spark程序执行过程\"><a href=\"#Spark程序执行过程\" class=\"headerlink\" title=\"Spark程序执行过程:\"></a>Spark程序执行过程:</h3><ol>\n<li>Driver Program(Spark Context)</li>\n<li>Cluster Manager(yearn,mesos)</li>\n<li>work node(executer)<br>如果说对RDD 执行了一个foreach println的操作，其实你是看不到任何东西的， 因为foreach在work node 执行的，所以println这个函数的副作用是显示在work node上的。</li>\n</ol>\n<p>这也提醒了我们在spark的代码的时候要做在action之前都是referential transparency! </p>\n"},{"title":"org mode 介紹","date":"2017-04-30T10:36:00.000Z","_content":"\n## 總體介紹\n\n- 作爲一個曾經的vimer 讓我轉向emacs 的主要原因就是org mode. 同樣作爲make up language，在 org mode 下可以輕鬆地實現 markdown中的所有效果， 但它更強的功能是在於GTD管理,和強大的導出功能.\n\n## 用org mode做GTD\n\n- 在org mode中在任意的一行按下C c C t 就可以讓這行文字作爲代辦事宜在To Do 和Done 之間切換，而按下C c C s則可以爲這件待辦事宜設置準備完成的時間。在安裝了org aganda之後，無論你在編輯什麼文件時候都可以打開 org aganda 查看自己還有什麼事情沒有完成。如果你是在mac os下使用emacs 你甚至可以把所有待辦事宜導出爲icandeler文件,配合icanderler 使用。\n- 在使用了org mode之後，我現在每天打開電腦第一件事情就是按下C a o a查看自己的今天的安排是什麼。在我每天做完了任何事情之後也是先把org 文件的那一項事物改爲Done 並且記錄下心得順便查看完成的時間。 \n- 除了這些常規的GTD功能之外，org mode 還提供把某個事項設置爲重復的功能，只需要在設置的之後加入+1d 或者+1w 就可以把這個事項設置爲每天或每周重復，這可以提醒你完成一些固定項目比如我就是把每天的運動和每周的水電費繳納時間都寫在了我的habit.org 中，這樣就不用再花太多的精力在記憶日常的瑣事上面了。\n\n## org mode 強大導出功能\n\n- org 文件在emacs 中可以導出成爲html，latex， pdf等文件，其中pdf文件是先把org 文件輸出爲tex 文件再通過pdflatex輸出爲pdf文件。\n- 在把org文件export 爲不同文件時，可以自行添加文件頭。在org 文件頭中設置了引入css文件後，我們可以修改生成html的樣式.我的[個人wiki](http://markwh1te.github.io/)就是用這種辦法生成的, 而且由於是直接放在github 可以通過github pages直接訪問並且可以直接登錄github在網站上修改，隨時更新就可以隨時看到結果，十分適合隨時都有可能改動wiki.\n\n## 雙刃劍\n\n- org mode 還有很多強大的功能，比如代碼運行和表格求值等等，但是也有美中不足的地方，那就是依賴於emacs ，由於emacs 有一定的學習難度，所以這也是很多人不知道org mode 一個原因。就像我感覺haskell 應該是這個世界上最完美的編程語言，但是在實際應用中卻並不常見，不是應爲haskell 不強大，而是願意沉下心來學習它理解它的人太少。\n- 雖然org mode 使用的人數沒有markdown多，支持的平臺也只有emacs 但是它確實有值得學習的地方是一個很值得點亮的技能點， 我現在就是GTD和wiki使用org ，寫blog和灌水使用markdown ，同時使用這兩種makeup language.在合適地方使用合適的語言。\n","source":"_posts/emacs_org.md","raw":"---\ntitle: org mode 介紹\ndate: 2017-04-30 10:36:00\ntags:\n  - editor\n  - time killer\ncategories: tools\n---\n\n## 總體介紹\n\n- 作爲一個曾經的vimer 讓我轉向emacs 的主要原因就是org mode. 同樣作爲make up language，在 org mode 下可以輕鬆地實現 markdown中的所有效果， 但它更強的功能是在於GTD管理,和強大的導出功能.\n\n## 用org mode做GTD\n\n- 在org mode中在任意的一行按下C c C t 就可以讓這行文字作爲代辦事宜在To Do 和Done 之間切換，而按下C c C s則可以爲這件待辦事宜設置準備完成的時間。在安裝了org aganda之後，無論你在編輯什麼文件時候都可以打開 org aganda 查看自己還有什麼事情沒有完成。如果你是在mac os下使用emacs 你甚至可以把所有待辦事宜導出爲icandeler文件,配合icanderler 使用。\n- 在使用了org mode之後，我現在每天打開電腦第一件事情就是按下C a o a查看自己的今天的安排是什麼。在我每天做完了任何事情之後也是先把org 文件的那一項事物改爲Done 並且記錄下心得順便查看完成的時間。 \n- 除了這些常規的GTD功能之外，org mode 還提供把某個事項設置爲重復的功能，只需要在設置的之後加入+1d 或者+1w 就可以把這個事項設置爲每天或每周重復，這可以提醒你完成一些固定項目比如我就是把每天的運動和每周的水電費繳納時間都寫在了我的habit.org 中，這樣就不用再花太多的精力在記憶日常的瑣事上面了。\n\n## org mode 強大導出功能\n\n- org 文件在emacs 中可以導出成爲html，latex， pdf等文件，其中pdf文件是先把org 文件輸出爲tex 文件再通過pdflatex輸出爲pdf文件。\n- 在把org文件export 爲不同文件時，可以自行添加文件頭。在org 文件頭中設置了引入css文件後，我們可以修改生成html的樣式.我的[個人wiki](http://markwh1te.github.io/)就是用這種辦法生成的, 而且由於是直接放在github 可以通過github pages直接訪問並且可以直接登錄github在網站上修改，隨時更新就可以隨時看到結果，十分適合隨時都有可能改動wiki.\n\n## 雙刃劍\n\n- org mode 還有很多強大的功能，比如代碼運行和表格求值等等，但是也有美中不足的地方，那就是依賴於emacs ，由於emacs 有一定的學習難度，所以這也是很多人不知道org mode 一個原因。就像我感覺haskell 應該是這個世界上最完美的編程語言，但是在實際應用中卻並不常見，不是應爲haskell 不強大，而是願意沉下心來學習它理解它的人太少。\n- 雖然org mode 使用的人數沒有markdown多，支持的平臺也只有emacs 但是它確實有值得學習的地方是一個很值得點亮的技能點， 我現在就是GTD和wiki使用org ，寫blog和灌水使用markdown ，同時使用這兩種makeup language.在合適地方使用合適的語言。\n","slug":"emacs_org","published":1,"updated":"2017-06-08T04:37:02.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3nxnjal0002rbjxei9me8ij","content":"<h2 id=\"總體介紹\"><a href=\"#總體介紹\" class=\"headerlink\" title=\"總體介紹\"></a>總體介紹</h2><ul>\n<li>作爲一個曾經的vimer 讓我轉向emacs 的主要原因就是org mode. 同樣作爲make up language，在 org mode 下可以輕鬆地實現 markdown中的所有效果， 但它更強的功能是在於GTD管理,和強大的導出功能.</li>\n</ul>\n<h2 id=\"用org-mode做GTD\"><a href=\"#用org-mode做GTD\" class=\"headerlink\" title=\"用org mode做GTD\"></a>用org mode做GTD</h2><ul>\n<li>在org mode中在任意的一行按下C c C t 就可以讓這行文字作爲代辦事宜在To Do 和Done 之間切換，而按下C c C s則可以爲這件待辦事宜設置準備完成的時間。在安裝了org aganda之後，無論你在編輯什麼文件時候都可以打開 org aganda 查看自己還有什麼事情沒有完成。如果你是在mac os下使用emacs 你甚至可以把所有待辦事宜導出爲icandeler文件,配合icanderler 使用。</li>\n<li>在使用了org mode之後，我現在每天打開電腦第一件事情就是按下C a o a查看自己的今天的安排是什麼。在我每天做完了任何事情之後也是先把org 文件的那一項事物改爲Done 並且記錄下心得順便查看完成的時間。 </li>\n<li>除了這些常規的GTD功能之外，org mode 還提供把某個事項設置爲重復的功能，只需要在設置的之後加入+1d 或者+1w 就可以把這個事項設置爲每天或每周重復，這可以提醒你完成一些固定項目比如我就是把每天的運動和每周的水電費繳納時間都寫在了我的habit.org 中，這樣就不用再花太多的精力在記憶日常的瑣事上面了。</li>\n</ul>\n<h2 id=\"org-mode-強大導出功能\"><a href=\"#org-mode-強大導出功能\" class=\"headerlink\" title=\"org mode 強大導出功能\"></a>org mode 強大導出功能</h2><ul>\n<li>org 文件在emacs 中可以導出成爲html，latex， pdf等文件，其中pdf文件是先把org 文件輸出爲tex 文件再通過pdflatex輸出爲pdf文件。</li>\n<li>在把org文件export 爲不同文件時，可以自行添加文件頭。在org 文件頭中設置了引入css文件後，我們可以修改生成html的樣式.我的<a href=\"http://markwh1te.github.io/\" target=\"_blank\" rel=\"external\">個人wiki</a>就是用這種辦法生成的, 而且由於是直接放在github 可以通過github pages直接訪問並且可以直接登錄github在網站上修改，隨時更新就可以隨時看到結果，十分適合隨時都有可能改動wiki.</li>\n</ul>\n<h2 id=\"雙刃劍\"><a href=\"#雙刃劍\" class=\"headerlink\" title=\"雙刃劍\"></a>雙刃劍</h2><ul>\n<li>org mode 還有很多強大的功能，比如代碼運行和表格求值等等，但是也有美中不足的地方，那就是依賴於emacs ，由於emacs 有一定的學習難度，所以這也是很多人不知道org mode 一個原因。就像我感覺haskell 應該是這個世界上最完美的編程語言，但是在實際應用中卻並不常見，不是應爲haskell 不強大，而是願意沉下心來學習它理解它的人太少。</li>\n<li>雖然org mode 使用的人數沒有markdown多，支持的平臺也只有emacs 但是它確實有值得學習的地方是一個很值得點亮的技能點， 我現在就是GTD和wiki使用org ，寫blog和灌水使用markdown ，同時使用這兩種makeup language.在合適地方使用合適的語言。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"總體介紹\"><a href=\"#總體介紹\" class=\"headerlink\" title=\"總體介紹\"></a>總體介紹</h2><ul>\n<li>作爲一個曾經的vimer 讓我轉向emacs 的主要原因就是org mode. 同樣作爲make up language，在 org mode 下可以輕鬆地實現 markdown中的所有效果， 但它更強的功能是在於GTD管理,和強大的導出功能.</li>\n</ul>\n<h2 id=\"用org-mode做GTD\"><a href=\"#用org-mode做GTD\" class=\"headerlink\" title=\"用org mode做GTD\"></a>用org mode做GTD</h2><ul>\n<li>在org mode中在任意的一行按下C c C t 就可以讓這行文字作爲代辦事宜在To Do 和Done 之間切換，而按下C c C s則可以爲這件待辦事宜設置準備完成的時間。在安裝了org aganda之後，無論你在編輯什麼文件時候都可以打開 org aganda 查看自己還有什麼事情沒有完成。如果你是在mac os下使用emacs 你甚至可以把所有待辦事宜導出爲icandeler文件,配合icanderler 使用。</li>\n<li>在使用了org mode之後，我現在每天打開電腦第一件事情就是按下C a o a查看自己的今天的安排是什麼。在我每天做完了任何事情之後也是先把org 文件的那一項事物改爲Done 並且記錄下心得順便查看完成的時間。 </li>\n<li>除了這些常規的GTD功能之外，org mode 還提供把某個事項設置爲重復的功能，只需要在設置的之後加入+1d 或者+1w 就可以把這個事項設置爲每天或每周重復，這可以提醒你完成一些固定項目比如我就是把每天的運動和每周的水電費繳納時間都寫在了我的habit.org 中，這樣就不用再花太多的精力在記憶日常的瑣事上面了。</li>\n</ul>\n<h2 id=\"org-mode-強大導出功能\"><a href=\"#org-mode-強大導出功能\" class=\"headerlink\" title=\"org mode 強大導出功能\"></a>org mode 強大導出功能</h2><ul>\n<li>org 文件在emacs 中可以導出成爲html，latex， pdf等文件，其中pdf文件是先把org 文件輸出爲tex 文件再通過pdflatex輸出爲pdf文件。</li>\n<li>在把org文件export 爲不同文件時，可以自行添加文件頭。在org 文件頭中設置了引入css文件後，我們可以修改生成html的樣式.我的<a href=\"http://markwh1te.github.io/\" target=\"_blank\" rel=\"external\">個人wiki</a>就是用這種辦法生成的, 而且由於是直接放在github 可以通過github pages直接訪問並且可以直接登錄github在網站上修改，隨時更新就可以隨時看到結果，十分適合隨時都有可能改動wiki.</li>\n</ul>\n<h2 id=\"雙刃劍\"><a href=\"#雙刃劍\" class=\"headerlink\" title=\"雙刃劍\"></a>雙刃劍</h2><ul>\n<li>org mode 還有很多強大的功能，比如代碼運行和表格求值等等，但是也有美中不足的地方，那就是依賴於emacs ，由於emacs 有一定的學習難度，所以這也是很多人不知道org mode 一個原因。就像我感覺haskell 應該是這個世界上最完美的編程語言，但是在實際應用中卻並不常見，不是應爲haskell 不強大，而是願意沉下心來學習它理解它的人太少。</li>\n<li>雖然org mode 使用的人數沒有markdown多，支持的平臺也只有emacs 但是它確實有值得學習的地方是一個很值得點亮的技能點， 我現在就是GTD和wiki使用org ，寫blog和灌水使用markdown ，同時使用這兩種makeup language.在合適地方使用合適的語言。</li>\n</ul>\n"},{"title":"Use Inoic Build Android App","date":"2016-05-30T17:36:29.000Z","_content":"\n\nDate: 2014-12-03 10:20\nCategory:front end\n\n[Ionic Official Guide](http://ionicframework.com/docs/guide/installation.html)\n\n### 1. Install JDK \n\nopen your termial\n>sudo apt-get install openjdk-7-jre\n\n### 2. Install Android SDK  \n[Cordova Official Guide](http://cordova.apache.org/docs/en/3.4.0/guide/platforms/android/index.html#Android%20Platform%20Guide)\n\n\n* Download android SDK\n\n__Android SDK means Android software development kit.It includes a comprehensive set of development tools.__\n\n[What is SDK?](https://en.wikipedia.org/wiki/Software_development_kit)\n\n[Android software development](https://en.wikipedia.org/wiki/Android_software_development)\n\n[linux android Sdk Download Link](https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz) \n\n* Add  \n\n>vim  ~/.bashrc\n\nadd these lines\n>export $ANDROID_HOME=/path/to/your/android-sdk-linux\n\n>export PATH=$ANDROID_HOME/tools:$PATH\n\n>export PATH=$ANDROID_HOME/platform-tools:$PATH\n\n\nnow open your termial \n>android \n\n__install these packages__:\n\nAndroid SDK Build Tools\n\nAndroid SDK Platform-tools\n\nAndroid SDK Tools\n\nAndroid Support Repository\n\nGoogle Repository\n\n\n### 3. Install Ionic\n>sudo npm install -g cordova\n\n>sudo npm install -g ionic\n\n>cd myapp\n\n>ionic platform add android\n\n>cd myapp\n\n>ionic serve\n\nyou will your project on web brower\n\n### 4. Testing \n\n* Install adb \n\nAndroid Debug Bridge (adb) is a versatile command line tool that lets you communicate with an emulator instance or connected Android-powered device.\n\n[What is adb?](https://developer.android.com/studio/command-line/adb.html)\n\nopen your termial\n>sudo add-apt-repository ppa:nilarimogard/webupd8\n\n>sudo apt-get update\n\n>sudo apt-get install android-tools-adb android-tools-fastboot\n\n\n\nRemember you need __enable Developer Options on your Android phone__ and link it with your PC.\n\n>cd /way/to/your/android/sdk/Android/Sdk/platform-tools\n\n>adb devices\n\n>adb start-server \n\n>cd myapp\n\n>ionic run android\n\n### 5. Publishing\n>cd myapp\n\n>ionic build android\n\n### 6. Publishing with Corsswalk\n>cd myapp\n\n>ionic browser add crosswalk\n\n>vim platform/android/build-extras.gradle\n\nadd this line \n>cdvBuildMultipleApks=false\n\nsave \n\n>ionic run android\n\n\n\n\n\n\n\n \n \n","source":"_posts/ionic_build.md","raw":"---\ntitle: Use Inoic Build Android App\ndate: 2016-05-30 17:36:29\ntags:\n  - android\n  - inoic\ncategories: tools\n---\n\n\nDate: 2014-12-03 10:20\nCategory:front end\n\n[Ionic Official Guide](http://ionicframework.com/docs/guide/installation.html)\n\n### 1. Install JDK \n\nopen your termial\n>sudo apt-get install openjdk-7-jre\n\n### 2. Install Android SDK  \n[Cordova Official Guide](http://cordova.apache.org/docs/en/3.4.0/guide/platforms/android/index.html#Android%20Platform%20Guide)\n\n\n* Download android SDK\n\n__Android SDK means Android software development kit.It includes a comprehensive set of development tools.__\n\n[What is SDK?](https://en.wikipedia.org/wiki/Software_development_kit)\n\n[Android software development](https://en.wikipedia.org/wiki/Android_software_development)\n\n[linux android Sdk Download Link](https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz) \n\n* Add  \n\n>vim  ~/.bashrc\n\nadd these lines\n>export $ANDROID_HOME=/path/to/your/android-sdk-linux\n\n>export PATH=$ANDROID_HOME/tools:$PATH\n\n>export PATH=$ANDROID_HOME/platform-tools:$PATH\n\n\nnow open your termial \n>android \n\n__install these packages__:\n\nAndroid SDK Build Tools\n\nAndroid SDK Platform-tools\n\nAndroid SDK Tools\n\nAndroid Support Repository\n\nGoogle Repository\n\n\n### 3. Install Ionic\n>sudo npm install -g cordova\n\n>sudo npm install -g ionic\n\n>cd myapp\n\n>ionic platform add android\n\n>cd myapp\n\n>ionic serve\n\nyou will your project on web brower\n\n### 4. Testing \n\n* Install adb \n\nAndroid Debug Bridge (adb) is a versatile command line tool that lets you communicate with an emulator instance or connected Android-powered device.\n\n[What is adb?](https://developer.android.com/studio/command-line/adb.html)\n\nopen your termial\n>sudo add-apt-repository ppa:nilarimogard/webupd8\n\n>sudo apt-get update\n\n>sudo apt-get install android-tools-adb android-tools-fastboot\n\n\n\nRemember you need __enable Developer Options on your Android phone__ and link it with your PC.\n\n>cd /way/to/your/android/sdk/Android/Sdk/platform-tools\n\n>adb devices\n\n>adb start-server \n\n>cd myapp\n\n>ionic run android\n\n### 5. Publishing\n>cd myapp\n\n>ionic build android\n\n### 6. Publishing with Corsswalk\n>cd myapp\n\n>ionic browser add crosswalk\n\n>vim platform/android/build-extras.gradle\n\nadd this line \n>cdvBuildMultipleApks=false\n\nsave \n\n>ionic run android\n\n\n\n\n\n\n\n \n \n","slug":"ionic_build","published":1,"updated":"2017-06-08T04:37:02.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3nxnjap0004rbjxsf12pe18","content":"<p>Date: 2014-12-03 10:20<br>Category:front end</p>\n<p><a href=\"http://ionicframework.com/docs/guide/installation.html\" target=\"_blank\" rel=\"external\">Ionic Official Guide</a></p>\n<h3 id=\"1-Install-JDK\"><a href=\"#1-Install-JDK\" class=\"headerlink\" title=\"1. Install JDK\"></a>1. Install JDK</h3><p>open your termial</p>\n<blockquote>\n<p>sudo apt-get install openjdk-7-jre</p>\n</blockquote>\n<h3 id=\"2-Install-Android-SDK\"><a href=\"#2-Install-Android-SDK\" class=\"headerlink\" title=\"2. Install Android SDK\"></a>2. Install Android SDK</h3><p><a href=\"http://cordova.apache.org/docs/en/3.4.0/guide/platforms/android/index.html#Android%20Platform%20Guide\" target=\"_blank\" rel=\"external\">Cordova Official Guide</a></p>\n<ul>\n<li>Download android SDK</li>\n</ul>\n<p><strong>Android SDK means Android software development kit.It includes a comprehensive set of development tools.</strong></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Software_development_kit\" target=\"_blank\" rel=\"external\">What is SDK?</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Android_software_development\" target=\"_blank\" rel=\"external\">Android software development</a></p>\n<p><a href=\"https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz\" target=\"_blank\" rel=\"external\">linux android Sdk Download Link</a> </p>\n<ul>\n<li>Add  </li>\n</ul>\n<blockquote>\n<p>vim  ~/.bashrc</p>\n</blockquote>\n<p>add these lines</p>\n<blockquote>\n<p>export $ANDROID_HOME=/path/to/your/android-sdk-linux</p>\n<p>export PATH=$ANDROID_HOME/tools:$PATH</p>\n<p>export PATH=$ANDROID_HOME/platform-tools:$PATH</p>\n</blockquote>\n<p>now open your termial </p>\n<blockquote>\n<p>android </p>\n</blockquote>\n<p><strong>install these packages</strong>:</p>\n<p>Android SDK Build Tools</p>\n<p>Android SDK Platform-tools</p>\n<p>Android SDK Tools</p>\n<p>Android Support Repository</p>\n<p>Google Repository</p>\n<h3 id=\"3-Install-Ionic\"><a href=\"#3-Install-Ionic\" class=\"headerlink\" title=\"3. Install Ionic\"></a>3. Install Ionic</h3><blockquote>\n<p>sudo npm install -g cordova</p>\n<p>sudo npm install -g ionic</p>\n<p>cd myapp</p>\n<p>ionic platform add android</p>\n<p>cd myapp</p>\n<p>ionic serve</p>\n</blockquote>\n<p>you will your project on web brower</p>\n<h3 id=\"4-Testing\"><a href=\"#4-Testing\" class=\"headerlink\" title=\"4. Testing\"></a>4. Testing</h3><ul>\n<li>Install adb </li>\n</ul>\n<p>Android Debug Bridge (adb) is a versatile command line tool that lets you communicate with an emulator instance or connected Android-powered device.</p>\n<p><a href=\"https://developer.android.com/studio/command-line/adb.html\" target=\"_blank\" rel=\"external\">What is adb?</a></p>\n<p>open your termial</p>\n<blockquote>\n<p>sudo add-apt-repository ppa:nilarimogard/webupd8</p>\n<p>sudo apt-get update</p>\n<p>sudo apt-get install android-tools-adb android-tools-fastboot</p>\n</blockquote>\n<p>Remember you need <strong>enable Developer Options on your Android phone</strong> and link it with your PC.</p>\n<blockquote>\n<p>cd /way/to/your/android/sdk/Android/Sdk/platform-tools</p>\n<p>adb devices</p>\n<p>adb start-server </p>\n<p>cd myapp</p>\n<p>ionic run android</p>\n</blockquote>\n<h3 id=\"5-Publishing\"><a href=\"#5-Publishing\" class=\"headerlink\" title=\"5. Publishing\"></a>5. Publishing</h3><blockquote>\n<p>cd myapp</p>\n<p>ionic build android</p>\n</blockquote>\n<h3 id=\"6-Publishing-with-Corsswalk\"><a href=\"#6-Publishing-with-Corsswalk\" class=\"headerlink\" title=\"6. Publishing with Corsswalk\"></a>6. Publishing with Corsswalk</h3><blockquote>\n<p>cd myapp</p>\n<p>ionic browser add crosswalk</p>\n<p>vim platform/android/build-extras.gradle</p>\n</blockquote>\n<p>add this line </p>\n<blockquote>\n<p>cdvBuildMultipleApks=false</p>\n</blockquote>\n<p>save </p>\n<blockquote>\n<p>ionic run android</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>Date: 2014-12-03 10:20<br>Category:front end</p>\n<p><a href=\"http://ionicframework.com/docs/guide/installation.html\" target=\"_blank\" rel=\"external\">Ionic Official Guide</a></p>\n<h3 id=\"1-Install-JDK\"><a href=\"#1-Install-JDK\" class=\"headerlink\" title=\"1. Install JDK\"></a>1. Install JDK</h3><p>open your termial</p>\n<blockquote>\n<p>sudo apt-get install openjdk-7-jre</p>\n</blockquote>\n<h3 id=\"2-Install-Android-SDK\"><a href=\"#2-Install-Android-SDK\" class=\"headerlink\" title=\"2. Install Android SDK\"></a>2. Install Android SDK</h3><p><a href=\"http://cordova.apache.org/docs/en/3.4.0/guide/platforms/android/index.html#Android%20Platform%20Guide\" target=\"_blank\" rel=\"external\">Cordova Official Guide</a></p>\n<ul>\n<li>Download android SDK</li>\n</ul>\n<p><strong>Android SDK means Android software development kit.It includes a comprehensive set of development tools.</strong></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Software_development_kit\" target=\"_blank\" rel=\"external\">What is SDK?</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Android_software_development\" target=\"_blank\" rel=\"external\">Android software development</a></p>\n<p><a href=\"https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz\" target=\"_blank\" rel=\"external\">linux android Sdk Download Link</a> </p>\n<ul>\n<li>Add  </li>\n</ul>\n<blockquote>\n<p>vim  ~/.bashrc</p>\n</blockquote>\n<p>add these lines</p>\n<blockquote>\n<p>export $ANDROID_HOME=/path/to/your/android-sdk-linux</p>\n<p>export PATH=$ANDROID_HOME/tools:$PATH</p>\n<p>export PATH=$ANDROID_HOME/platform-tools:$PATH</p>\n</blockquote>\n<p>now open your termial </p>\n<blockquote>\n<p>android </p>\n</blockquote>\n<p><strong>install these packages</strong>:</p>\n<p>Android SDK Build Tools</p>\n<p>Android SDK Platform-tools</p>\n<p>Android SDK Tools</p>\n<p>Android Support Repository</p>\n<p>Google Repository</p>\n<h3 id=\"3-Install-Ionic\"><a href=\"#3-Install-Ionic\" class=\"headerlink\" title=\"3. Install Ionic\"></a>3. Install Ionic</h3><blockquote>\n<p>sudo npm install -g cordova</p>\n<p>sudo npm install -g ionic</p>\n<p>cd myapp</p>\n<p>ionic platform add android</p>\n<p>cd myapp</p>\n<p>ionic serve</p>\n</blockquote>\n<p>you will your project on web brower</p>\n<h3 id=\"4-Testing\"><a href=\"#4-Testing\" class=\"headerlink\" title=\"4. Testing\"></a>4. Testing</h3><ul>\n<li>Install adb </li>\n</ul>\n<p>Android Debug Bridge (adb) is a versatile command line tool that lets you communicate with an emulator instance or connected Android-powered device.</p>\n<p><a href=\"https://developer.android.com/studio/command-line/adb.html\" target=\"_blank\" rel=\"external\">What is adb?</a></p>\n<p>open your termial</p>\n<blockquote>\n<p>sudo add-apt-repository ppa:nilarimogard/webupd8</p>\n<p>sudo apt-get update</p>\n<p>sudo apt-get install android-tools-adb android-tools-fastboot</p>\n</blockquote>\n<p>Remember you need <strong>enable Developer Options on your Android phone</strong> and link it with your PC.</p>\n<blockquote>\n<p>cd /way/to/your/android/sdk/Android/Sdk/platform-tools</p>\n<p>adb devices</p>\n<p>adb start-server </p>\n<p>cd myapp</p>\n<p>ionic run android</p>\n</blockquote>\n<h3 id=\"5-Publishing\"><a href=\"#5-Publishing\" class=\"headerlink\" title=\"5. Publishing\"></a>5. Publishing</h3><blockquote>\n<p>cd myapp</p>\n<p>ionic build android</p>\n</blockquote>\n<h3 id=\"6-Publishing-with-Corsswalk\"><a href=\"#6-Publishing-with-Corsswalk\" class=\"headerlink\" title=\"6. Publishing with Corsswalk\"></a>6. Publishing with Corsswalk</h3><blockquote>\n<p>cd myapp</p>\n<p>ionic browser add crosswalk</p>\n<p>vim platform/android/build-extras.gradle</p>\n</blockquote>\n<p>add this line </p>\n<blockquote>\n<p>cdvBuildMultipleApks=false</p>\n</blockquote>\n<p>save </p>\n<blockquote>\n<p>ionic run android</p>\n</blockquote>\n"},{"title":"建立Jenkins 持续集成环境","date":"2015-12-03T10:20:00.000Z","_content":"\n* 下载安装Jenkins(on Ubuntu)\n\n>wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key \n\n>sudo apt-key add -\n\n>sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian-stable \n\n>binary/ > /etc/apt/sources.list.d/jenkins.list'\n\n>sudo apt-get update\n\n>sudo apt-get install jenkins\n\n* 配置jenkins (配合django-jenkins)\n\njenkins安装后,会自动启动,默认是在8080\n","source":"_posts/jenkins_ci.md","raw":"---\ntitle: 建立Jenkins 持续集成环境\ndate: 2015-12-03 10:20\ntags:\n  - CI\n  - jenkins\ncategories: server\n---\n\n* 下载安装Jenkins(on Ubuntu)\n\n>wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key \n\n>sudo apt-key add -\n\n>sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian-stable \n\n>binary/ > /etc/apt/sources.list.d/jenkins.list'\n\n>sudo apt-get update\n\n>sudo apt-get install jenkins\n\n* 配置jenkins (配合django-jenkins)\n\njenkins安装后,会自动启动,默认是在8080\n","slug":"jenkins_ci","published":1,"updated":"2017-06-08T04:37:02.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3nxnjar0007rbjxyym1tzk2","content":"<ul>\n<li>下载安装Jenkins(on Ubuntu)</li>\n</ul>\n<blockquote>\n<p>wget -q -O - <a href=\"https://jenkins-ci.org/debian/jenkins-ci.org.key\" target=\"_blank\" rel=\"external\">https://jenkins-ci.org/debian/jenkins-ci.org.key</a> </p>\n<p>sudo apt-key add -</p>\n<p>sudo sh -c ‘echo deb <a href=\"http://pkg.jenkins-ci.org/debian-stable\" target=\"_blank\" rel=\"external\">http://pkg.jenkins-ci.org/debian-stable</a> </p>\n<p>binary/ &gt; /etc/apt/sources.list.d/jenkins.list’</p>\n<p>sudo apt-get update</p>\n<p>sudo apt-get install jenkins</p>\n</blockquote>\n<ul>\n<li>配置jenkins (配合django-jenkins)</li>\n</ul>\n<p>jenkins安装后,会自动启动,默认是在8080</p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>下载安装Jenkins(on Ubuntu)</li>\n</ul>\n<blockquote>\n<p>wget -q -O - <a href=\"https://jenkins-ci.org/debian/jenkins-ci.org.key\" target=\"_blank\" rel=\"external\">https://jenkins-ci.org/debian/jenkins-ci.org.key</a> </p>\n<p>sudo apt-key add -</p>\n<p>sudo sh -c ‘echo deb <a href=\"http://pkg.jenkins-ci.org/debian-stable\" target=\"_blank\" rel=\"external\">http://pkg.jenkins-ci.org/debian-stable</a> </p>\n<p>binary/ &gt; /etc/apt/sources.list.d/jenkins.list’</p>\n<p>sudo apt-get update</p>\n<p>sudo apt-get install jenkins</p>\n</blockquote>\n<ul>\n<li>配置jenkins (配合django-jenkins)</li>\n</ul>\n<p>jenkins安装后,会自动启动,默认是在8080</p>\n"},{"title":"刷题的正确姿势","date":"2016-08-03T09:20:00.000Z","_content":"\n\n\n\n刷题是指通过大量题目进行针对性的训练，如果掌握了有效方法不但可以有效地巩固学过的知识而且也可以在这个过程中收获很多的快乐！\n\n很多人认为刷题就是单纯地做题，这个认识是片面的。就像我之前说，刷题是__针对性的训练__。做题只是这个训练的表现形式。而一次正确训练过程应该是包括目标制定，执行操作，结果分析三个部分的。\n\n拿我在leecode上遇到的这道happy number来举例：\n\n\n![leecode](http://7xq2dq.com1.z0.glb.clouddn.com/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-21%20%E4%B8%8B%E5%8D%8811.30.25.png)\n\n简单分析一下题目的大意，就是编写一个算法判断某个数字是否是“快乐数”。\n\n快乐数的定义过程如下：从任意一个正整数开始，将原数替换为其每一位的平方和，重复此过程直到数字=1（此时其值将不再变化），或者进入一个不包含1的无限循环。那些以1为过程终止的数字即为“快乐数”。（就想图片中那个example中的19一样）\n\n* 目标制定\n\n 我们有看到题目中hash table的标签，那么我们这次训练目标自然是巩固hash这个知识点了。我们可以把每次各位平方和的结果储存在一个集合（hash table）中，如果某次各位平方和结果在这个集合中已经储存过了，那么说明已经进入循环了，则这个数不是happy number，反正如果到最后结果是1，这个数就是happy number。\n* 执行操作\n\n  如果有清晰的想法，coding会变得轻松很多，python代码如下所示：\n  \n    \n    class Solution():\n      def isHappy(self, n):\n          numSet = set()\n          while n != 1 and n not in numSet:\n              numSet.add(n)\n              sum = 0\n              while n:\n                  digit = n % 10\n                  sum += digit * digit\n                  n /= 10\n              n = sum\n          return n == 1\n\n* 结果分析\n  \n  如果对我们目前才用的方法是对是用两个while的循环完成了需求，我们知道所有循环都是可以用递归改写的，很多时候递写法会让代码更加优雅和可读，那么我们尝试来用递归解这道题目:\n\n\n    class Solution():\n        def __init__(self):\n            self.past = set()\n        def isHappy(self, n):\n          intermediate = sum(int(i) ** 2 for i in str(n))\n          if intermediate == 1:\n              return True\n          elif intermediate in self.past:\n              return False\n          else:\n              self.past.add(intermediate)\n              return self.isHappy(intermediate)\n\n  显而易见，在对变量进行恰当的命名和用递归重构后，这段代码看起来更加具有可读性了。而在这次训练中我不仅复习了hash的用法，还巩固了递归和循环相互转化。\n  \n\n合理地制定训练目标，认真地执行训练过程再加上对结果冷静反思，才是刷题的正确姿势。happy coding！ ：P\n  \n  \n  \n  \n  \n  \n  \n","source":"_posts/kill_questions.md","raw":"---\ntitle: 刷题的正确姿势\ndate: 2016-8-03 09:20\ntags:\n  - math\n  - time killer\ncategory: Algorithms\n---\n\n\n\n\n刷题是指通过大量题目进行针对性的训练，如果掌握了有效方法不但可以有效地巩固学过的知识而且也可以在这个过程中收获很多的快乐！\n\n很多人认为刷题就是单纯地做题，这个认识是片面的。就像我之前说，刷题是__针对性的训练__。做题只是这个训练的表现形式。而一次正确训练过程应该是包括目标制定，执行操作，结果分析三个部分的。\n\n拿我在leecode上遇到的这道happy number来举例：\n\n\n![leecode](http://7xq2dq.com1.z0.glb.clouddn.com/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-21%20%E4%B8%8B%E5%8D%8811.30.25.png)\n\n简单分析一下题目的大意，就是编写一个算法判断某个数字是否是“快乐数”。\n\n快乐数的定义过程如下：从任意一个正整数开始，将原数替换为其每一位的平方和，重复此过程直到数字=1（此时其值将不再变化），或者进入一个不包含1的无限循环。那些以1为过程终止的数字即为“快乐数”。（就想图片中那个example中的19一样）\n\n* 目标制定\n\n 我们有看到题目中hash table的标签，那么我们这次训练目标自然是巩固hash这个知识点了。我们可以把每次各位平方和的结果储存在一个集合（hash table）中，如果某次各位平方和结果在这个集合中已经储存过了，那么说明已经进入循环了，则这个数不是happy number，反正如果到最后结果是1，这个数就是happy number。\n* 执行操作\n\n  如果有清晰的想法，coding会变得轻松很多，python代码如下所示：\n  \n    \n    class Solution():\n      def isHappy(self, n):\n          numSet = set()\n          while n != 1 and n not in numSet:\n              numSet.add(n)\n              sum = 0\n              while n:\n                  digit = n % 10\n                  sum += digit * digit\n                  n /= 10\n              n = sum\n          return n == 1\n\n* 结果分析\n  \n  如果对我们目前才用的方法是对是用两个while的循环完成了需求，我们知道所有循环都是可以用递归改写的，很多时候递写法会让代码更加优雅和可读，那么我们尝试来用递归解这道题目:\n\n\n    class Solution():\n        def __init__(self):\n            self.past = set()\n        def isHappy(self, n):\n          intermediate = sum(int(i) ** 2 for i in str(n))\n          if intermediate == 1:\n              return True\n          elif intermediate in self.past:\n              return False\n          else:\n              self.past.add(intermediate)\n              return self.isHappy(intermediate)\n\n  显而易见，在对变量进行恰当的命名和用递归重构后，这段代码看起来更加具有可读性了。而在这次训练中我不仅复习了hash的用法，还巩固了递归和循环相互转化。\n  \n\n合理地制定训练目标，认真地执行训练过程再加上对结果冷静反思，才是刷题的正确姿势。happy coding！ ：P\n  \n  \n  \n  \n  \n  \n  \n","slug":"kill_questions","published":1,"updated":"2017-06-08T04:37:02.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3nxnjas000arbjxpocg2nsp","content":"<p>刷题是指通过大量题目进行针对性的训练，如果掌握了有效方法不但可以有效地巩固学过的知识而且也可以在这个过程中收获很多的快乐！</p>\n<p>很多人认为刷题就是单纯地做题，这个认识是片面的。就像我之前说，刷题是<strong>针对性的训练</strong>。做题只是这个训练的表现形式。而一次正确训练过程应该是包括目标制定，执行操作，结果分析三个部分的。</p>\n<p>拿我在leecode上遇到的这道happy number来举例：</p>\n<p><img src=\"http://7xq2dq.com1.z0.glb.clouddn.com/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-21%20%E4%B8%8B%E5%8D%8811.30.25.png\" alt=\"leecode\"></p>\n<p>简单分析一下题目的大意，就是编写一个算法判断某个数字是否是“快乐数”。</p>\n<p>快乐数的定义过程如下：从任意一个正整数开始，将原数替换为其每一位的平方和，重复此过程直到数字=1（此时其值将不再变化），或者进入一个不包含1的无限循环。那些以1为过程终止的数字即为“快乐数”。（就想图片中那个example中的19一样）</p>\n<ul>\n<li><p>目标制定</p>\n<p>我们有看到题目中hash table的标签，那么我们这次训练目标自然是巩固hash这个知识点了。我们可以把每次各位平方和的结果储存在一个集合（hash table）中，如果某次各位平方和结果在这个集合中已经储存过了，那么说明已经进入循环了，则这个数不是happy number，反正如果到最后结果是1，这个数就是happy number。</p>\n</li>\n<li><p>执行操作</p>\n<p>如果有清晰的想法，coding会变得轻松很多，python代码如下所示：</p>\n</li>\n</ul>\n<pre><code>class Solution():\n  def isHappy(self, n):\n      numSet = set()\n      while n != 1 and n not in numSet:\n          numSet.add(n)\n          sum = 0\n          while n:\n              digit = n % 10\n              sum += digit * digit\n              n /= 10\n          n = sum\n      return n == 1\n</code></pre><ul>\n<li><p>结果分析</p>\n<p>如果对我们目前才用的方法是对是用两个while的循环完成了需求，我们知道所有循环都是可以用递归改写的，很多时候递写法会让代码更加优雅和可读，那么我们尝试来用递归解这道题目:</p>\n</li>\n</ul>\n<pre><code>class Solution():\n    def __init__(self):\n        self.past = set()\n    def isHappy(self, n):\n      intermediate = sum(int(i) ** 2 for i in str(n))\n      if intermediate == 1:\n          return True\n      elif intermediate in self.past:\n          return False\n      else:\n          self.past.add(intermediate)\n          return self.isHappy(intermediate)\n</code></pre><p>  显而易见，在对变量进行恰当的命名和用递归重构后，这段代码看起来更加具有可读性了。而在这次训练中我不仅复习了hash的用法，还巩固了递归和循环相互转化。</p>\n<p>合理地制定训练目标，认真地执行训练过程再加上对结果冷静反思，才是刷题的正确姿势。happy coding！ ：P</p>\n","site":{"data":{}},"excerpt":"","more":"<p>刷题是指通过大量题目进行针对性的训练，如果掌握了有效方法不但可以有效地巩固学过的知识而且也可以在这个过程中收获很多的快乐！</p>\n<p>很多人认为刷题就是单纯地做题，这个认识是片面的。就像我之前说，刷题是<strong>针对性的训练</strong>。做题只是这个训练的表现形式。而一次正确训练过程应该是包括目标制定，执行操作，结果分析三个部分的。</p>\n<p>拿我在leecode上遇到的这道happy number来举例：</p>\n<p><img src=\"http://7xq2dq.com1.z0.glb.clouddn.com/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-21%20%E4%B8%8B%E5%8D%8811.30.25.png\" alt=\"leecode\"></p>\n<p>简单分析一下题目的大意，就是编写一个算法判断某个数字是否是“快乐数”。</p>\n<p>快乐数的定义过程如下：从任意一个正整数开始，将原数替换为其每一位的平方和，重复此过程直到数字=1（此时其值将不再变化），或者进入一个不包含1的无限循环。那些以1为过程终止的数字即为“快乐数”。（就想图片中那个example中的19一样）</p>\n<ul>\n<li><p>目标制定</p>\n<p>我们有看到题目中hash table的标签，那么我们这次训练目标自然是巩固hash这个知识点了。我们可以把每次各位平方和的结果储存在一个集合（hash table）中，如果某次各位平方和结果在这个集合中已经储存过了，那么说明已经进入循环了，则这个数不是happy number，反正如果到最后结果是1，这个数就是happy number。</p>\n</li>\n<li><p>执行操作</p>\n<p>如果有清晰的想法，coding会变得轻松很多，python代码如下所示：</p>\n</li>\n</ul>\n<pre><code>class Solution():\n  def isHappy(self, n):\n      numSet = set()\n      while n != 1 and n not in numSet:\n          numSet.add(n)\n          sum = 0\n          while n:\n              digit = n % 10\n              sum += digit * digit\n              n /= 10\n          n = sum\n      return n == 1\n</code></pre><ul>\n<li><p>结果分析</p>\n<p>如果对我们目前才用的方法是对是用两个while的循环完成了需求，我们知道所有循环都是可以用递归改写的，很多时候递写法会让代码更加优雅和可读，那么我们尝试来用递归解这道题目:</p>\n</li>\n</ul>\n<pre><code>class Solution():\n    def __init__(self):\n        self.past = set()\n    def isHappy(self, n):\n      intermediate = sum(int(i) ** 2 for i in str(n))\n      if intermediate == 1:\n          return True\n      elif intermediate in self.past:\n          return False\n      else:\n          self.past.add(intermediate)\n          return self.isHappy(intermediate)\n</code></pre><p>  显而易见，在对变量进行恰当的命名和用递归重构后，这段代码看起来更加具有可读性了。而在这次训练中我不仅复习了hash的用法，还巩固了递归和循环相互转化。</p>\n<p>合理地制定训练目标，认真地执行训练过程再加上对结果冷静反思，才是刷题的正确姿势。happy coding！ ：P</p>\n"},{"title":"通过微信网页api收集微信群聊天记录","date":"2016-01-03T21:20:00.000Z","_content":"\n\n\n\n\n* 背景\n\n由于我们公司目前产品的信息都是通过人工录入的，在时效性和准确性上都有一定的折扣，在和同事们讨论过之后，决定采用通过网页版微信api来采集在各个金融微信群中的聊天记录，再通过自然语言分析进行产品库的扩充．\n\n* 微信web版本\n\n这篇文章介绍了[微信web版登陆的全过程](http://www.tanhao.me/talk/1466.html/)，微信web端的登陆本质上就是通过访问服务器分配的会话ID去获得登陆的二维码，我们在这个项目中用到微信机器人就是通过这个api进行开发的．\n\n\n* 微信机器人\n\n开源项目[wxbot](https://github.com/liuwons/wxBot)\n，本质是一个微信web版的ＡＰＩ.这个项目所有的逻辑都在ＷＸＢot这个类中，通过改写这个类的不同方法，我们可以取到登陆微信账号联系人，聊天信息，群组，公众号等信息．\n\n在收集金融群信息的过程中，我主要重写了handle_msg_all这个方法，判断消息是否为群消息，再将群消息存入数据库．\n\n注意wxbot这个项目中WXBot类　使用的是old　style 不可以使用super方法！\n\n\n* 部署与使用\n\n为了可以随时控制微信机器人是否继续抓取消息，我选择了用supervisor来控制，在部署django的server之后，启动supervisor.(即在manage.py的同级目录下输入supervisord)会发现在当前目录下生成了qr.png文件．（如果你是在本地运行的会发现qr.png文件被自动打开了）这个qr.png文件就是根据本次会话id生成的二维码，用微信扫描这个二维码之后就可以登陆了，于此同时所有的群聊天记录都会被记录．\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/wxbot.md","raw":"---\ntitle: 通过微信网页api收集微信群聊天记录\ndate: 2016-01-03 21:20\ntags:\n  - wechat\ncategory: server\n---\n\n\n\n\n\n* 背景\n\n由于我们公司目前产品的信息都是通过人工录入的，在时效性和准确性上都有一定的折扣，在和同事们讨论过之后，决定采用通过网页版微信api来采集在各个金融微信群中的聊天记录，再通过自然语言分析进行产品库的扩充．\n\n* 微信web版本\n\n这篇文章介绍了[微信web版登陆的全过程](http://www.tanhao.me/talk/1466.html/)，微信web端的登陆本质上就是通过访问服务器分配的会话ID去获得登陆的二维码，我们在这个项目中用到微信机器人就是通过这个api进行开发的．\n\n\n* 微信机器人\n\n开源项目[wxbot](https://github.com/liuwons/wxBot)\n，本质是一个微信web版的ＡＰＩ.这个项目所有的逻辑都在ＷＸＢot这个类中，通过改写这个类的不同方法，我们可以取到登陆微信账号联系人，聊天信息，群组，公众号等信息．\n\n在收集金融群信息的过程中，我主要重写了handle_msg_all这个方法，判断消息是否为群消息，再将群消息存入数据库．\n\n注意wxbot这个项目中WXBot类　使用的是old　style 不可以使用super方法！\n\n\n* 部署与使用\n\n为了可以随时控制微信机器人是否继续抓取消息，我选择了用supervisor来控制，在部署django的server之后，启动supervisor.(即在manage.py的同级目录下输入supervisord)会发现在当前目录下生成了qr.png文件．（如果你是在本地运行的会发现qr.png文件被自动打开了）这个qr.png文件就是根据本次会话id生成的二维码，用微信扫描这个二维码之后就可以登陆了，于此同时所有的群聊天记录都会被记录．\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"wxbot","published":1,"updated":"2017-06-08T04:37:02.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3nxnjav000drbjxwp80o9lt","content":"<ul>\n<li>背景</li>\n</ul>\n<p>由于我们公司目前产品的信息都是通过人工录入的，在时效性和准确性上都有一定的折扣，在和同事们讨论过之后，决定采用通过网页版微信api来采集在各个金融微信群中的聊天记录，再通过自然语言分析进行产品库的扩充．</p>\n<ul>\n<li>微信web版本</li>\n</ul>\n<p>这篇文章介绍了<a href=\"http://www.tanhao.me/talk/1466.html/\" target=\"_blank\" rel=\"external\">微信web版登陆的全过程</a>，微信web端的登陆本质上就是通过访问服务器分配的会话ID去获得登陆的二维码，我们在这个项目中用到微信机器人就是通过这个api进行开发的．</p>\n<ul>\n<li>微信机器人</li>\n</ul>\n<p>开源项目<a href=\"https://github.com/liuwons/wxBot\" target=\"_blank\" rel=\"external\">wxbot</a><br>，本质是一个微信web版的ＡＰＩ.这个项目所有的逻辑都在ＷＸＢot这个类中，通过改写这个类的不同方法，我们可以取到登陆微信账号联系人，聊天信息，群组，公众号等信息．</p>\n<p>在收集金融群信息的过程中，我主要重写了handle_msg_all这个方法，判断消息是否为群消息，再将群消息存入数据库．</p>\n<p>注意wxbot这个项目中WXBot类　使用的是old　style 不可以使用super方法！</p>\n<ul>\n<li>部署与使用</li>\n</ul>\n<p>为了可以随时控制微信机器人是否继续抓取消息，我选择了用supervisor来控制，在部署django的server之后，启动supervisor.(即在manage.py的同级目录下输入supervisord)会发现在当前目录下生成了qr.png文件．（如果你是在本地运行的会发现qr.png文件被自动打开了）这个qr.png文件就是根据本次会话id生成的二维码，用微信扫描这个二维码之后就可以登陆了，于此同时所有的群聊天记录都会被记录．</p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>背景</li>\n</ul>\n<p>由于我们公司目前产品的信息都是通过人工录入的，在时效性和准确性上都有一定的折扣，在和同事们讨论过之后，决定采用通过网页版微信api来采集在各个金融微信群中的聊天记录，再通过自然语言分析进行产品库的扩充．</p>\n<ul>\n<li>微信web版本</li>\n</ul>\n<p>这篇文章介绍了<a href=\"http://www.tanhao.me/talk/1466.html/\" target=\"_blank\" rel=\"external\">微信web版登陆的全过程</a>，微信web端的登陆本质上就是通过访问服务器分配的会话ID去获得登陆的二维码，我们在这个项目中用到微信机器人就是通过这个api进行开发的．</p>\n<ul>\n<li>微信机器人</li>\n</ul>\n<p>开源项目<a href=\"https://github.com/liuwons/wxBot\" target=\"_blank\" rel=\"external\">wxbot</a><br>，本质是一个微信web版的ＡＰＩ.这个项目所有的逻辑都在ＷＸＢot这个类中，通过改写这个类的不同方法，我们可以取到登陆微信账号联系人，聊天信息，群组，公众号等信息．</p>\n<p>在收集金融群信息的过程中，我主要重写了handle_msg_all这个方法，判断消息是否为群消息，再将群消息存入数据库．</p>\n<p>注意wxbot这个项目中WXBot类　使用的是old　style 不可以使用super方法！</p>\n<ul>\n<li>部署与使用</li>\n</ul>\n<p>为了可以随时控制微信机器人是否继续抓取消息，我选择了用supervisor来控制，在部署django的server之后，启动supervisor.(即在manage.py的同级目录下输入supervisord)会发现在当前目录下生成了qr.png文件．（如果你是在本地运行的会发现qr.png文件被自动打开了）这个qr.png文件就是根据本次会话id生成的二维码，用微信扫描这个二维码之后就可以登陆了，于此同时所有的群聊天记录都会被记录．</p>\n"},{"title":"无痛入门神经网络(1) 感知器","date":"2017-06-08T01:17:00.000Z","_content":" \n## 综述 \n\n> And God said, “Let there be light,” and there was light.\n\n这个系列的主要目标是讲清楚什么是神经网络以及它的原理。既然题目是无痛入门，我会用尽量简单的数学讲明白问题。在遇到一定要用到的复杂数学知识时，我会提前做好介绍。编程方面，我也会最简单的Python代码实现。即这个系列对读者的最低要求为有求常见函数导数和可以用Python写出for循环的能力。\n## 感知器的历史\n现在即使是很多没有接触过神经网络的人也知道神经网络由于架构的不同分为 深度神经网络(DNN),积卷神经网络(CNN)，循环神经网络(RNN)和对抗神经网络(GAN)等，但是在上世纪六十年代的时候，并没有神经网络这个名词,那时候只有一种被称作感知器的学习工具，在最开始的时候它很看起来很有前景。但是在1969年，Marvin Minsky在名为<<perceptron>>的书中分析了它的功能和它的局限性，导致了当时很多人对感知器以及神经网络嗤之以鼻。然而感知器的学习过程依然在广泛使用，比如google就在很多产品中使用了相关算法。\n## 感知器的架构\n一个感知器的架构如下图所示，\n![perceptron](http://7xq2dq.com1.z0.glb.clouddn.com/Screen%20Shot%202017-06-07%20at%209.45.09%20PM%20%281%29.png)\n分别为:\n* 输入向量（input),即为用来训练感知器的原始数据\n* 阶梯函数(stop function),可以通过生物上的神经元阈值来理解，当输入向量和权重相乘之后，如果结果大于阈值（比如0），则神经元激活(返回1)，反之则神经元未激活(返回0)\n* 权重(weight),感知器通过数据训练，学习到的权向量通过将它和输入向量点乘，把乘积带入阶梯函数后我们可以得到我们期待的结果\n\n\n## 感知器的训练过程\n感知器训练过程可以分为两步：\n1. 在输入向量中加入一列都为1的偏置列（bias）这是因为有可能我们选取的特值肯定不是完全反应了客观规律的，偏置列可以理解为对特值的补充，也就是在设计这个系统的时候没有考虑到的偏差 。比如我们都要设计一个来表示数学中或运算的感知器，它的真值表如下\n\n|x1|x2|结果|\n|----|------|----|\n| 0| 0|  0|\n| 0| 1|  1|\n| 1| 0|  1|\n| 1| 1|  1|\n那么相对应的Python代码生成的输入向量和期待结果应该为\n\n```python\nfrom numpy import array\ntraining_data = [\n    (array([0,0,1]), 0),\n    (array([0,1,1]), 1),\n    (array([1,0,1]), 1),\n    (array([1,1,1]), 1),\n]\n```\n2. 随机选择输入向量中的一个执行下面的步骤，重复n次。\n    * 计算权重向量和一组输入向量的点乘，用乘积计算阶梯含函数的结果\n    * 如果结果和目标结果一样，则不更改权重向量\n    * 如果结果和目标结果不同且为0，则把权重向量和输入向量相加，把结果作为新的权重向量\n    * 如果结果和目标结果相同且为1，则把权重向量和输入向量相减，把结果作为新的权重向量\n    \n在步骤重复若干次后， 我们可以得到一个不变权重向量，即收敛结束。有了这个权重向量我们就可以用新的输入向量来预测结果了。\n具体代码为：\n\n```python\nfrom random import choice\nfrom numpy import array,dot,random\n\n#随机生成权重向量\nweight = random.rand(3)\n#重复100次\nn = 100\n#阶梯函数 \nunit_step = lambda x:0 if x < 0 else 1\n#训练过程 \nfor i in range(n):\n    x,expect = choice(training_data)\n    output = dot(x,weight)\n    flag = expect - unit_step(output)\n    weight += flag * x\n#结果展示\nfor x, _ in training_data:\n  results = dot(x,weight)\n  print(\"{}:{} -> {}\".format(x[:2],results,unit_step(results)))\n```\n如果取第一步中的traning_data训练，就可以得到一个符合或真值表的感知器了\n## 感知器的局限性\n在一开始讲感知器历史的时候我就说过感知器是有局限性的，举个例子，如果我们要让感知器来判断x1,x2，是否一样，我们可以想到这样的一组训练数据\n\n相同: (1,1)->1,(0,0)->1\n \n不相同: (1,0)->0,(0,1)->0\n\n用Python向量来表示就是\n```python\nfrom numpy import array\ntraining_data = [\n    (array([0,0,1]), 1),\n    (array([0,1,1]), 0),\n    (array([1,0,1]), 0),\n    (array([1,1,1]), 1),\n]\n```\n但是如果你用这个training_data带入刚刚的代码训练，你会发现每次执行之后的感知器判断的结果都不一样，换而言之，这次没有收敛，我们没有得到一个稳定的权重向量。\n\n我们从代数上证明感知器没有办法完成这件事情，首先假设权重向量为 {w1,w2},那根据训练数据和向量乘法法则我们可以得到下面四个不等式:\n\n$$\nz = \\sum_{k=1}^n xw +b\n$$\n\n$$\nw\\_1 \\cdot 0 + w\\_2 \\cdot 0 = 0 >= 0 \n$$\n\n$$\nw_1 \\cdot 0 + w_2 \\cdot 1 < 0 \n$$\n$$\nw_1 \\cdot 1 + w_2 \\cdot 0 < 0 \n$$\n$$\nw_1 \\cdot 1 + w_2 \\cdot 1 >= 0 \n$$\n\n\n显而易见这是不可能成立的。\n\n## 局限性的原因和解决办法\n\n> 无论个体还是集体，过于单一化只会走向毁灭 ----攻殻機動隊 (1995)\n\n* 原因\n    1. 从感知器的架构可以看出，感知器只有两层，一层输入一层输出，训练只会改变第一层的权重向量\n    2. 感知器的第一层只做了一次线性变换\n    \n    这两个原因导致感知器训练结果的好坏大部分取决与输入向量的质量，即是否选了足够重要的特征值作为输入向量。这是一个在做深度学习过程中很容易犯的一个错误，因为这个思路等于是把解决问题的最难的一步让人类而不是算法处理了。所以一但发现大部分的时间是在设计和寻找更重要的特征值时， 应该考虑换个思路\n* 解决办法\n如果我们想将输入向量质量对训练结果的影响降低，那么最容易想到的办法是增加层数，有更多的权重向量可以记录更多的信息。但这还不够，因为是单纯的增加层数没有解决单一化的问题。我们需要的是一个多层的，每一层都是非线性的神经网络。这样除了输入层和输出层，中间的隐藏层可以帮助我去分辨输入向量中的哪个纬度重要，这样就不会有感知器那样的局限性。但是新的问题就是我们如何去训练一个这样复杂的神经网络呢？嗯，下次我会讲讲这个的。\n\n## reference\n1. [Ian Goodfellow and Yoshua Bengio and Aaron Courville,Deep Learning,2016](http://www.deeplearningbook.org/)\n2. [Marvin Minsky and Seymour A. Papert,Perceptrons Expanded Edition,1987](https://mitpress.mit.edu/books/perceptrons)\n3. [Danilo Bargen's blog,2017](https://blog.dbrgn.ch/)\n","source":"_posts/perceptron_network.md","raw":"---\ntitle: 无痛入门神经网络(1) 感知器 \ndate: 2017-06-08 01:17:00\ntags:\n  - deep learning\n  - machine learning\n  - data mining\ncategories: algorithms\n---\n \n## 综述 \n\n> And God said, “Let there be light,” and there was light.\n\n这个系列的主要目标是讲清楚什么是神经网络以及它的原理。既然题目是无痛入门，我会用尽量简单的数学讲明白问题。在遇到一定要用到的复杂数学知识时，我会提前做好介绍。编程方面，我也会最简单的Python代码实现。即这个系列对读者的最低要求为有求常见函数导数和可以用Python写出for循环的能力。\n## 感知器的历史\n现在即使是很多没有接触过神经网络的人也知道神经网络由于架构的不同分为 深度神经网络(DNN),积卷神经网络(CNN)，循环神经网络(RNN)和对抗神经网络(GAN)等，但是在上世纪六十年代的时候，并没有神经网络这个名词,那时候只有一种被称作感知器的学习工具，在最开始的时候它很看起来很有前景。但是在1969年，Marvin Minsky在名为<<perceptron>>的书中分析了它的功能和它的局限性，导致了当时很多人对感知器以及神经网络嗤之以鼻。然而感知器的学习过程依然在广泛使用，比如google就在很多产品中使用了相关算法。\n## 感知器的架构\n一个感知器的架构如下图所示，\n![perceptron](http://7xq2dq.com1.z0.glb.clouddn.com/Screen%20Shot%202017-06-07%20at%209.45.09%20PM%20%281%29.png)\n分别为:\n* 输入向量（input),即为用来训练感知器的原始数据\n* 阶梯函数(stop function),可以通过生物上的神经元阈值来理解，当输入向量和权重相乘之后，如果结果大于阈值（比如0），则神经元激活(返回1)，反之则神经元未激活(返回0)\n* 权重(weight),感知器通过数据训练，学习到的权向量通过将它和输入向量点乘，把乘积带入阶梯函数后我们可以得到我们期待的结果\n\n\n## 感知器的训练过程\n感知器训练过程可以分为两步：\n1. 在输入向量中加入一列都为1的偏置列（bias）这是因为有可能我们选取的特值肯定不是完全反应了客观规律的，偏置列可以理解为对特值的补充，也就是在设计这个系统的时候没有考虑到的偏差 。比如我们都要设计一个来表示数学中或运算的感知器，它的真值表如下\n\n|x1|x2|结果|\n|----|------|----|\n| 0| 0|  0|\n| 0| 1|  1|\n| 1| 0|  1|\n| 1| 1|  1|\n那么相对应的Python代码生成的输入向量和期待结果应该为\n\n```python\nfrom numpy import array\ntraining_data = [\n    (array([0,0,1]), 0),\n    (array([0,1,1]), 1),\n    (array([1,0,1]), 1),\n    (array([1,1,1]), 1),\n]\n```\n2. 随机选择输入向量中的一个执行下面的步骤，重复n次。\n    * 计算权重向量和一组输入向量的点乘，用乘积计算阶梯含函数的结果\n    * 如果结果和目标结果一样，则不更改权重向量\n    * 如果结果和目标结果不同且为0，则把权重向量和输入向量相加，把结果作为新的权重向量\n    * 如果结果和目标结果相同且为1，则把权重向量和输入向量相减，把结果作为新的权重向量\n    \n在步骤重复若干次后， 我们可以得到一个不变权重向量，即收敛结束。有了这个权重向量我们就可以用新的输入向量来预测结果了。\n具体代码为：\n\n```python\nfrom random import choice\nfrom numpy import array,dot,random\n\n#随机生成权重向量\nweight = random.rand(3)\n#重复100次\nn = 100\n#阶梯函数 \nunit_step = lambda x:0 if x < 0 else 1\n#训练过程 \nfor i in range(n):\n    x,expect = choice(training_data)\n    output = dot(x,weight)\n    flag = expect - unit_step(output)\n    weight += flag * x\n#结果展示\nfor x, _ in training_data:\n  results = dot(x,weight)\n  print(\"{}:{} -> {}\".format(x[:2],results,unit_step(results)))\n```\n如果取第一步中的traning_data训练，就可以得到一个符合或真值表的感知器了\n## 感知器的局限性\n在一开始讲感知器历史的时候我就说过感知器是有局限性的，举个例子，如果我们要让感知器来判断x1,x2，是否一样，我们可以想到这样的一组训练数据\n\n相同: (1,1)->1,(0,0)->1\n \n不相同: (1,0)->0,(0,1)->0\n\n用Python向量来表示就是\n```python\nfrom numpy import array\ntraining_data = [\n    (array([0,0,1]), 1),\n    (array([0,1,1]), 0),\n    (array([1,0,1]), 0),\n    (array([1,1,1]), 1),\n]\n```\n但是如果你用这个training_data带入刚刚的代码训练，你会发现每次执行之后的感知器判断的结果都不一样，换而言之，这次没有收敛，我们没有得到一个稳定的权重向量。\n\n我们从代数上证明感知器没有办法完成这件事情，首先假设权重向量为 {w1,w2},那根据训练数据和向量乘法法则我们可以得到下面四个不等式:\n\n$$\nz = \\sum_{k=1}^n xw +b\n$$\n\n$$\nw\\_1 \\cdot 0 + w\\_2 \\cdot 0 = 0 >= 0 \n$$\n\n$$\nw_1 \\cdot 0 + w_2 \\cdot 1 < 0 \n$$\n$$\nw_1 \\cdot 1 + w_2 \\cdot 0 < 0 \n$$\n$$\nw_1 \\cdot 1 + w_2 \\cdot 1 >= 0 \n$$\n\n\n显而易见这是不可能成立的。\n\n## 局限性的原因和解决办法\n\n> 无论个体还是集体，过于单一化只会走向毁灭 ----攻殻機動隊 (1995)\n\n* 原因\n    1. 从感知器的架构可以看出，感知器只有两层，一层输入一层输出，训练只会改变第一层的权重向量\n    2. 感知器的第一层只做了一次线性变换\n    \n    这两个原因导致感知器训练结果的好坏大部分取决与输入向量的质量，即是否选了足够重要的特征值作为输入向量。这是一个在做深度学习过程中很容易犯的一个错误，因为这个思路等于是把解决问题的最难的一步让人类而不是算法处理了。所以一但发现大部分的时间是在设计和寻找更重要的特征值时， 应该考虑换个思路\n* 解决办法\n如果我们想将输入向量质量对训练结果的影响降低，那么最容易想到的办法是增加层数，有更多的权重向量可以记录更多的信息。但这还不够，因为是单纯的增加层数没有解决单一化的问题。我们需要的是一个多层的，每一层都是非线性的神经网络。这样除了输入层和输出层，中间的隐藏层可以帮助我去分辨输入向量中的哪个纬度重要，这样就不会有感知器那样的局限性。但是新的问题就是我们如何去训练一个这样复杂的神经网络呢？嗯，下次我会讲讲这个的。\n\n## reference\n1. [Ian Goodfellow and Yoshua Bengio and Aaron Courville,Deep Learning,2016](http://www.deeplearningbook.org/)\n2. [Marvin Minsky and Seymour A. Papert,Perceptrons Expanded Edition,1987](https://mitpress.mit.edu/books/perceptrons)\n3. [Danilo Bargen's blog,2017](https://blog.dbrgn.ch/)\n","slug":"perceptron_network","published":1,"updated":"2017-06-08T05:20:49.514Z","_id":"cj3nxnjaw000grbjxarwk8z6u","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"综述\"><a href=\"#综述\" class=\"headerlink\" title=\"综述\"></a>综述</h2><blockquote>\n<p>And God said, “Let there be light,” and there was light.</p>\n</blockquote>\n<p>这个系列的主要目标是讲清楚什么是神经网络以及它的原理。既然题目是无痛入门，我会用尽量简单的数学讲明白问题。在遇到一定要用到的复杂数学知识时，我会提前做好介绍。编程方面，我也会最简单的Python代码实现。即这个系列对读者的最低要求为有求常见函数导数和可以用Python写出for循环的能力。</p>\n<h2 id=\"感知器的历史\"><a href=\"#感知器的历史\" class=\"headerlink\" title=\"感知器的历史\"></a>感知器的历史</h2><p>现在即使是很多没有接触过神经网络的人也知道神经网络由于架构的不同分为 深度神经网络(DNN),积卷神经网络(CNN)，循环神经网络(RNN)和对抗神经网络(GAN)等，但是在上世纪六十年代的时候，并没有神经网络这个名词,那时候只有一种被称作感知器的学习工具，在最开始的时候它很看起来很有前景。但是在1969年，Marvin Minsky在名为&lt;<perceptron>&gt;的书中分析了它的功能和它的局限性，导致了当时很多人对感知器以及神经网络嗤之以鼻。然而感知器的学习过程依然在广泛使用，比如google就在很多产品中使用了相关算法。</perceptron></p>\n<h2 id=\"感知器的架构\"><a href=\"#感知器的架构\" class=\"headerlink\" title=\"感知器的架构\"></a>感知器的架构</h2><p>一个感知器的架构如下图所示，<br><img src=\"http://7xq2dq.com1.z0.glb.clouddn.com/Screen%20Shot%202017-06-07%20at%209.45.09%20PM%20%281%29.png\" alt=\"perceptron\"><br>分别为:</p>\n<ul>\n<li>输入向量（input),即为用来训练感知器的原始数据</li>\n<li>阶梯函数(stop function),可以通过生物上的神经元阈值来理解，当输入向量和权重相乘之后，如果结果大于阈值（比如0），则神经元激活(返回1)，反之则神经元未激活(返回0)</li>\n<li>权重(weight),感知器通过数据训练，学习到的权向量通过将它和输入向量点乘，把乘积带入阶梯函数后我们可以得到我们期待的结果</li>\n</ul>\n<h2 id=\"感知器的训练过程\"><a href=\"#感知器的训练过程\" class=\"headerlink\" title=\"感知器的训练过程\"></a>感知器的训练过程</h2><p>感知器训练过程可以分为两步：</p>\n<ol>\n<li>在输入向量中加入一列都为1的偏置列（bias）这是因为有可能我们选取的特值肯定不是完全反应了客观规律的，偏置列可以理解为对特值的补充，也就是在设计这个系统的时候没有考虑到的偏差 。比如我们都要设计一个来表示数学中或运算的感知器，它的真值表如下</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>x1</th>\n<th>x2</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>那么相对应的Python代码生成的输入向量和期待结果应该为</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> array</div><div class=\"line\">training_data = [</div><div class=\"line\">    (array([<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>]), <span class=\"number\">0</span>),</div><div class=\"line\">    (array([<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]), <span class=\"number\">1</span>),</div><div class=\"line\">    (array([<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>]), <span class=\"number\">1</span>),</div><div class=\"line\">    (array([<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]), <span class=\"number\">1</span>),</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n<ol>\n<li>随机选择输入向量中的一个执行下面的步骤，重复n次。<ul>\n<li>计算权重向量和一组输入向量的点乘，用乘积计算阶梯含函数的结果</li>\n<li>如果结果和目标结果一样，则不更改权重向量</li>\n<li>如果结果和目标结果不同且为0，则把权重向量和输入向量相加，把结果作为新的权重向量</li>\n<li>如果结果和目标结果相同且为1，则把权重向量和输入向量相减，把结果作为新的权重向量</li>\n</ul>\n</li>\n</ol>\n<p>在步骤重复若干次后， 我们可以得到一个不变权重向量，即收敛结束。有了这个权重向量我们就可以用新的输入向量来预测结果了。<br>具体代码为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> choice</div><div class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> array,dot,random</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#随机生成权重向量</span></div><div class=\"line\">weight = random.rand(<span class=\"number\">3</span>)</div><div class=\"line\"><span class=\"comment\">#重复100次</span></div><div class=\"line\">n = <span class=\"number\">100</span></div><div class=\"line\"><span class=\"comment\">#阶梯函数 </span></div><div class=\"line\">unit_step = <span class=\"keyword\">lambda</span> x:<span class=\"number\">0</span> <span class=\"keyword\">if</span> x &lt; <span class=\"number\">0</span> <span class=\"keyword\">else</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"comment\">#训练过程 </span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</div><div class=\"line\">    x,expect = choice(training_data)</div><div class=\"line\">    output = dot(x,weight)</div><div class=\"line\">    flag = expect - unit_step(output)</div><div class=\"line\">    weight += flag * x</div><div class=\"line\"><span class=\"comment\">#结果展示</span></div><div class=\"line\"><span class=\"keyword\">for</span> x, _ <span class=\"keyword\">in</span> training_data:</div><div class=\"line\">  results = dot(x,weight)</div><div class=\"line\">  print(<span class=\"string\">\"&#123;&#125;:&#123;&#125; -&gt; &#123;&#125;\"</span>.format(x[:<span class=\"number\">2</span>],results,unit_step(results)))</div></pre></td></tr></table></figure>\n<p>如果取第一步中的traning_data训练，就可以得到一个符合或真值表的感知器了</p>\n<h2 id=\"感知器的局限性\"><a href=\"#感知器的局限性\" class=\"headerlink\" title=\"感知器的局限性\"></a>感知器的局限性</h2><p>在一开始讲感知器历史的时候我就说过感知器是有局限性的，举个例子，如果我们要让感知器来判断x1,x2，是否一样，我们可以想到这样的一组训练数据</p>\n<p>相同: (1,1)-&gt;1,(0,0)-&gt;1</p>\n<p>不相同: (1,0)-&gt;0,(0,1)-&gt;0</p>\n<p>用Python向量来表示就是<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> array</div><div class=\"line\">training_data = [</div><div class=\"line\">    (array([<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>]), <span class=\"number\">1</span>),</div><div class=\"line\">    (array([<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]), <span class=\"number\">0</span>),</div><div class=\"line\">    (array([<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>]), <span class=\"number\">0</span>),</div><div class=\"line\">    (array([<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]), <span class=\"number\">1</span>),</div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>但是如果你用这个training_data带入刚刚的代码训练，你会发现每次执行之后的感知器判断的结果都不一样，换而言之，这次没有收敛，我们没有得到一个稳定的权重向量。</p>\n<p>我们从代数上证明感知器没有办法完成这件事情，首先假设权重向量为 {w1,w2},那根据训练数据和向量乘法法则我们可以得到下面四个不等式:</p>\n<p>$$<br>z = \\sum_{k=1}^n xw +b<br>$$</p>\n<p>$$<br>w_1 \\cdot 0 + w_2 \\cdot 0 = 0 &gt;= 0<br>$$</p>\n<p>$$<br>w_1 \\cdot 0 + w_2 \\cdot 1 &lt; 0<br>$$<br>$$<br>w_1 \\cdot 1 + w_2 \\cdot 0 &lt; 0<br>$$<br>$$<br>w_1 \\cdot 1 + w_2 \\cdot 1 &gt;= 0<br>$$</p>\n<p>显而易见这是不可能成立的。</p>\n<h2 id=\"局限性的原因和解决办法\"><a href=\"#局限性的原因和解决办法\" class=\"headerlink\" title=\"局限性的原因和解决办法\"></a>局限性的原因和解决办法</h2><blockquote>\n<p>无论个体还是集体，过于单一化只会走向毁灭 —-攻殻機動隊 (1995)</p>\n</blockquote>\n<ul>\n<li><p>原因</p>\n<ol>\n<li>从感知器的架构可以看出，感知器只有两层，一层输入一层输出，训练只会改变第一层的权重向量</li>\n<li><p>感知器的第一层只做了一次线性变换</p>\n<p>这两个原因导致感知器训练结果的好坏大部分取决与输入向量的质量，即是否选了足够重要的特征值作为输入向量。这是一个在做深度学习过程中很容易犯的一个错误，因为这个思路等于是把解决问题的最难的一步让人类而不是算法处理了。所以一但发现大部分的时间是在设计和寻找更重要的特征值时， 应该考虑换个思路</p>\n</li>\n</ol>\n</li>\n<li>解决办法<br>如果我们想将输入向量质量对训练结果的影响降低，那么最容易想到的办法是增加层数，有更多的权重向量可以记录更多的信息。但这还不够，因为是单纯的增加层数没有解决单一化的问题。我们需要的是一个多层的，每一层都是非线性的神经网络。这样除了输入层和输出层，中间的隐藏层可以帮助我去分辨输入向量中的哪个纬度重要，这样就不会有感知器那样的局限性。但是新的问题就是我们如何去训练一个这样复杂的神经网络呢？嗯，下次我会讲讲这个的。</li>\n</ul>\n<h2 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h2><ol>\n<li><a href=\"http://www.deeplearningbook.org/\" target=\"_blank\" rel=\"external\">Ian Goodfellow and Yoshua Bengio and Aaron Courville,Deep Learning,2016</a></li>\n<li><a href=\"https://mitpress.mit.edu/books/perceptrons\" target=\"_blank\" rel=\"external\">Marvin Minsky and Seymour A. Papert,Perceptrons Expanded Edition,1987</a></li>\n<li><a href=\"https://blog.dbrgn.ch/\" target=\"_blank\" rel=\"external\">Danilo Bargen’s blog,2017</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"综述\"><a href=\"#综述\" class=\"headerlink\" title=\"综述\"></a>综述</h2><blockquote>\n<p>And God said, “Let there be light,” and there was light.</p>\n</blockquote>\n<p>这个系列的主要目标是讲清楚什么是神经网络以及它的原理。既然题目是无痛入门，我会用尽量简单的数学讲明白问题。在遇到一定要用到的复杂数学知识时，我会提前做好介绍。编程方面，我也会最简单的Python代码实现。即这个系列对读者的最低要求为有求常见函数导数和可以用Python写出for循环的能力。</p>\n<h2 id=\"感知器的历史\"><a href=\"#感知器的历史\" class=\"headerlink\" title=\"感知器的历史\"></a>感知器的历史</h2><p>现在即使是很多没有接触过神经网络的人也知道神经网络由于架构的不同分为 深度神经网络(DNN),积卷神经网络(CNN)，循环神经网络(RNN)和对抗神经网络(GAN)等，但是在上世纪六十年代的时候，并没有神经网络这个名词,那时候只有一种被称作感知器的学习工具，在最开始的时候它很看起来很有前景。但是在1969年，Marvin Minsky在名为&lt;<perceptron>&gt;的书中分析了它的功能和它的局限性，导致了当时很多人对感知器以及神经网络嗤之以鼻。然而感知器的学习过程依然在广泛使用，比如google就在很多产品中使用了相关算法。</perceptron></p>\n<h2 id=\"感知器的架构\"><a href=\"#感知器的架构\" class=\"headerlink\" title=\"感知器的架构\"></a>感知器的架构</h2><p>一个感知器的架构如下图所示，<br><img src=\"http://7xq2dq.com1.z0.glb.clouddn.com/Screen%20Shot%202017-06-07%20at%209.45.09%20PM%20%281%29.png\" alt=\"perceptron\"><br>分别为:</p>\n<ul>\n<li>输入向量（input),即为用来训练感知器的原始数据</li>\n<li>阶梯函数(stop function),可以通过生物上的神经元阈值来理解，当输入向量和权重相乘之后，如果结果大于阈值（比如0），则神经元激活(返回1)，反之则神经元未激活(返回0)</li>\n<li>权重(weight),感知器通过数据训练，学习到的权向量通过将它和输入向量点乘，把乘积带入阶梯函数后我们可以得到我们期待的结果</li>\n</ul>\n<h2 id=\"感知器的训练过程\"><a href=\"#感知器的训练过程\" class=\"headerlink\" title=\"感知器的训练过程\"></a>感知器的训练过程</h2><p>感知器训练过程可以分为两步：</p>\n<ol>\n<li>在输入向量中加入一列都为1的偏置列（bias）这是因为有可能我们选取的特值肯定不是完全反应了客观规律的，偏置列可以理解为对特值的补充，也就是在设计这个系统的时候没有考虑到的偏差 。比如我们都要设计一个来表示数学中或运算的感知器，它的真值表如下</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>x1</th>\n<th>x2</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>那么相对应的Python代码生成的输入向量和期待结果应该为</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> array</div><div class=\"line\">training_data = [</div><div class=\"line\">    (array([<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>]), <span class=\"number\">0</span>),</div><div class=\"line\">    (array([<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]), <span class=\"number\">1</span>),</div><div class=\"line\">    (array([<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>]), <span class=\"number\">1</span>),</div><div class=\"line\">    (array([<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]), <span class=\"number\">1</span>),</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n<ol>\n<li>随机选择输入向量中的一个执行下面的步骤，重复n次。<ul>\n<li>计算权重向量和一组输入向量的点乘，用乘积计算阶梯含函数的结果</li>\n<li>如果结果和目标结果一样，则不更改权重向量</li>\n<li>如果结果和目标结果不同且为0，则把权重向量和输入向量相加，把结果作为新的权重向量</li>\n<li>如果结果和目标结果相同且为1，则把权重向量和输入向量相减，把结果作为新的权重向量</li>\n</ul>\n</li>\n</ol>\n<p>在步骤重复若干次后， 我们可以得到一个不变权重向量，即收敛结束。有了这个权重向量我们就可以用新的输入向量来预测结果了。<br>具体代码为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> choice</div><div class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> array,dot,random</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#随机生成权重向量</span></div><div class=\"line\">weight = random.rand(<span class=\"number\">3</span>)</div><div class=\"line\"><span class=\"comment\">#重复100次</span></div><div class=\"line\">n = <span class=\"number\">100</span></div><div class=\"line\"><span class=\"comment\">#阶梯函数 </span></div><div class=\"line\">unit_step = <span class=\"keyword\">lambda</span> x:<span class=\"number\">0</span> <span class=\"keyword\">if</span> x &lt; <span class=\"number\">0</span> <span class=\"keyword\">else</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"comment\">#训练过程 </span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</div><div class=\"line\">    x,expect = choice(training_data)</div><div class=\"line\">    output = dot(x,weight)</div><div class=\"line\">    flag = expect - unit_step(output)</div><div class=\"line\">    weight += flag * x</div><div class=\"line\"><span class=\"comment\">#结果展示</span></div><div class=\"line\"><span class=\"keyword\">for</span> x, _ <span class=\"keyword\">in</span> training_data:</div><div class=\"line\">  results = dot(x,weight)</div><div class=\"line\">  print(<span class=\"string\">\"&#123;&#125;:&#123;&#125; -&gt; &#123;&#125;\"</span>.format(x[:<span class=\"number\">2</span>],results,unit_step(results)))</div></pre></td></tr></table></figure>\n<p>如果取第一步中的traning_data训练，就可以得到一个符合或真值表的感知器了</p>\n<h2 id=\"感知器的局限性\"><a href=\"#感知器的局限性\" class=\"headerlink\" title=\"感知器的局限性\"></a>感知器的局限性</h2><p>在一开始讲感知器历史的时候我就说过感知器是有局限性的，举个例子，如果我们要让感知器来判断x1,x2，是否一样，我们可以想到这样的一组训练数据</p>\n<p>相同: (1,1)-&gt;1,(0,0)-&gt;1</p>\n<p>不相同: (1,0)-&gt;0,(0,1)-&gt;0</p>\n<p>用Python向量来表示就是<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> array</div><div class=\"line\">training_data = [</div><div class=\"line\">    (array([<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>]), <span class=\"number\">1</span>),</div><div class=\"line\">    (array([<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]), <span class=\"number\">0</span>),</div><div class=\"line\">    (array([<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>]), <span class=\"number\">0</span>),</div><div class=\"line\">    (array([<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]), <span class=\"number\">1</span>),</div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>但是如果你用这个training_data带入刚刚的代码训练，你会发现每次执行之后的感知器判断的结果都不一样，换而言之，这次没有收敛，我们没有得到一个稳定的权重向量。</p>\n<p>我们从代数上证明感知器没有办法完成这件事情，首先假设权重向量为 {w1,w2},那根据训练数据和向量乘法法则我们可以得到下面四个不等式:</p>\n<p>$$<br>z = \\sum_{k=1}^n xw +b<br>$$</p>\n<p>$$<br>w_1 \\cdot 0 + w_2 \\cdot 0 = 0 &gt;= 0<br>$$</p>\n<p>$$<br>w_1 \\cdot 0 + w_2 \\cdot 1 &lt; 0<br>$$<br>$$<br>w_1 \\cdot 1 + w_2 \\cdot 0 &lt; 0<br>$$<br>$$<br>w_1 \\cdot 1 + w_2 \\cdot 1 &gt;= 0<br>$$</p>\n<p>显而易见这是不可能成立的。</p>\n<h2 id=\"局限性的原因和解决办法\"><a href=\"#局限性的原因和解决办法\" class=\"headerlink\" title=\"局限性的原因和解决办法\"></a>局限性的原因和解决办法</h2><blockquote>\n<p>无论个体还是集体，过于单一化只会走向毁灭 —-攻殻機動隊 (1995)</p>\n</blockquote>\n<ul>\n<li><p>原因</p>\n<ol>\n<li>从感知器的架构可以看出，感知器只有两层，一层输入一层输出，训练只会改变第一层的权重向量</li>\n<li><p>感知器的第一层只做了一次线性变换</p>\n<p>这两个原因导致感知器训练结果的好坏大部分取决与输入向量的质量，即是否选了足够重要的特征值作为输入向量。这是一个在做深度学习过程中很容易犯的一个错误，因为这个思路等于是把解决问题的最难的一步让人类而不是算法处理了。所以一但发现大部分的时间是在设计和寻找更重要的特征值时， 应该考虑换个思路</p>\n</li>\n</ol>\n</li>\n<li>解决办法<br>如果我们想将输入向量质量对训练结果的影响降低，那么最容易想到的办法是增加层数，有更多的权重向量可以记录更多的信息。但这还不够，因为是单纯的增加层数没有解决单一化的问题。我们需要的是一个多层的，每一层都是非线性的神经网络。这样除了输入层和输出层，中间的隐藏层可以帮助我去分辨输入向量中的哪个纬度重要，这样就不会有感知器那样的局限性。但是新的问题就是我们如何去训练一个这样复杂的神经网络呢？嗯，下次我会讲讲这个的。</li>\n</ul>\n<h2 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h2><ol>\n<li><a href=\"http://www.deeplearningbook.org/\" target=\"_blank\" rel=\"external\">Ian Goodfellow and Yoshua Bengio and Aaron Courville,Deep Learning,2016</a></li>\n<li><a href=\"https://mitpress.mit.edu/books/perceptrons\" target=\"_blank\" rel=\"external\">Marvin Minsky and Seymour A. Papert,Perceptrons Expanded Edition,1987</a></li>\n<li><a href=\"https://blog.dbrgn.ch/\" target=\"_blank\" rel=\"external\">Danilo Bargen’s blog,2017</a></li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj3nxnjad0001rbjx39c4cl9s","category_id":"cj3fwt6vj0002b7sgq7ozgy7u","_id":"cj3nxnjar0005rbjx4ybp4103"},{"post_id":"cj3nxnjal0002rbjxei9me8ij","category_id":"cj3fwt6vr0005b7sgres15kaw","_id":"cj3nxnjas0008rbjx6iczezy6"},{"post_id":"cj3nxnjap0004rbjxsf12pe18","category_id":"cj3fwt6vr0005b7sgres15kaw","_id":"cj3nxnjav000brbjxfju2iblv"},{"post_id":"cj3nxnjar0007rbjxyym1tzk2","category_id":"cj3fwt71x000sb7sgzqqp5ohk","_id":"cj3nxnjaw000erbjxzzkpk8rr"},{"post_id":"cj3nxnjas000arbjxpocg2nsp","category_id":"cj3fwt71t000pb7sglknjkaz9","_id":"cj3nxnjb0000hrbjx60f4w4th"},{"post_id":"cj3nxnjav000drbjxwp80o9lt","category_id":"cj3fwt71x000sb7sgzqqp5ohk","_id":"cj3nxnjb1000jrbjx5fe9f6gh"},{"post_id":"cj3nxnjaw000grbjxarwk8z6u","category_id":"cj3m7f50y0000iosg9jwyvx40","_id":"cj3nxnjb1000lrbjxjijq1dpq"}],"PostTag":[{"post_id":"cj3nxnjad0001rbjx39c4cl9s","tag_id":"cj3fwt6vn0003b7sgr2xe8bgl","_id":"cj3nxnjao0003rbjxuignhhjw"},{"post_id":"cj3nxnjad0001rbjx39c4cl9s","tag_id":"cj3fwt6vr0006b7sgoq7px9ms","_id":"cj3nxnjar0006rbjxtngi9dzb"},{"post_id":"cj3nxnjal0002rbjxei9me8ij","tag_id":"cj3fwt6vu0009b7sgvg2brg50","_id":"cj3nxnjas0009rbjxa04mt6ke"},{"post_id":"cj3nxnjal0002rbjxei9me8ij","tag_id":"cj3fwt6vx000db7sg6gbphagr","_id":"cj3nxnjav000crbjxkf778t2d"},{"post_id":"cj3nxnjap0004rbjxsf12pe18","tag_id":"cj3fwt6vy000fb7sgnynhdnag","_id":"cj3nxnjaw000frbjxntoigtci"},{"post_id":"cj3nxnjap0004rbjxsf12pe18","tag_id":"cj3fwt6vy000ib7sgwhb3a1uk","_id":"cj3nxnjb0000irbjxf8dveze7"},{"post_id":"cj3nxnjar0007rbjxyym1tzk2","tag_id":"cj3fwt71y000tb7sg1vfbwkbx","_id":"cj3nxnjb1000krbjxq0exikoh"},{"post_id":"cj3nxnjar0007rbjxyym1tzk2","tag_id":"cj3fwt720000yb7sg1wjxd28q","_id":"cj3nxnjb2000mrbjxsjdrinz9"},{"post_id":"cj3nxnjas000arbjxpocg2nsp","tag_id":"cj3fwt71u000qb7sg4ng9d9f6","_id":"cj3nxnjb2000nrbjxq7yujc8i"},{"post_id":"cj3nxnjas000arbjxpocg2nsp","tag_id":"cj3fwt6vx000db7sg6gbphagr","_id":"cj3nxnjb2000orbjx5thq1eyr"},{"post_id":"cj3nxnjav000drbjxwp80o9lt","tag_id":"cj3fwt7210010b7sgxz1jqno3","_id":"cj3nxnjb2000prbjx224vf5v1"},{"post_id":"cj3nxnjaw000grbjxarwk8z6u","tag_id":"cj3m6xnfb0001hbsgrlik34jd","_id":"cj3nxnjb2000qrbjxkowmbaqm"},{"post_id":"cj3nxnjaw000grbjxarwk8z6u","tag_id":"cj3g07srb0000q3sg2jyetr51","_id":"cj3nxnjb3000rrbjxscj3c999"},{"post_id":"cj3nxnjaw000grbjxarwk8z6u","tag_id":"cj3m6xnfg0003hbsgyjapfpo8","_id":"cj3nxnjb3000srbjx2hlei8mi"}],"Tag":[{"name":"Spark","_id":"cj3fwt6vn0003b7sgr2xe8bgl"},{"name":"Scala","_id":"cj3fwt6vr0006b7sgoq7px9ms"},{"name":"editor","_id":"cj3fwt6vu0009b7sgvg2brg50"},{"name":"time killer","_id":"cj3fwt6vx000db7sg6gbphagr"},{"name":"android","_id":"cj3fwt6vy000fb7sgnynhdnag"},{"name":"inoic","_id":"cj3fwt6vy000ib7sgwhb3a1uk"},{"name":"math","_id":"cj3fwt71u000qb7sg4ng9d9f6"},{"name":"CI","_id":"cj3fwt71y000tb7sg1vfbwkbx"},{"name":"jenkins","_id":"cj3fwt720000yb7sg1wjxd28q"},{"name":"wechat","_id":"cj3fwt7210010b7sgxz1jqno3"},{"name":"machine learning","_id":"cj3g07srb0000q3sg2jyetr51"},{"name":"deep learning","_id":"cj3m6xnfb0001hbsgrlik34jd"},{"name":"data mining","_id":"cj3m6xnfg0003hbsgyjapfpo8"}]}}